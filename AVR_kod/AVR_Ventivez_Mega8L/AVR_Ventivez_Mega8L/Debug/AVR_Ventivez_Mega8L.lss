
AVR_Ventivez_Mega8L.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000020c  00800060  000015c6  0000165a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000005a  0080026c  0080026c  00001866  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001866  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001898  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018cd  00000000  00000000  000019bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087f  00000000  00000000  00003289  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010a7  00000000  00000000  00003b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f8  00000000  00000000  00004bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000761  00000000  00000000  00004ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000eb5  00000000  00000000  00005609  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000064be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6e c0       	rjmp	.+220    	; 0xde <__ctors_end>
       2:	88 c0       	rjmp	.+272    	; 0x114 <__bad_interrupt>
       4:	87 c0       	rjmp	.+270    	; 0x114 <__bad_interrupt>
       6:	86 c0       	rjmp	.+268    	; 0x114 <__bad_interrupt>
       8:	85 c0       	rjmp	.+266    	; 0x114 <__bad_interrupt>
       a:	84 c0       	rjmp	.+264    	; 0x114 <__bad_interrupt>
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	82 c0       	rjmp	.+260    	; 0x114 <__bad_interrupt>
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	67 c1       	rjmp	.+718    	; 0x2e2 <__vector_9>
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	15 c2       	rjmp	.+1066   	; 0x442 <__vector_11>
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	7c c0       	rjmp	.+248    	; 0x114 <__bad_interrupt>
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	7a c0       	rjmp	.+244    	; 0x114 <__bad_interrupt>
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	1a c8       	rjmp	.-4044   	; 0xfffff058 <__eeprom_end+0xff7ef058>
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	d1 c1       	rjmp	.+930    	; 0x3ca <__vector_9+0xe8>
      28:	eb c1       	rjmp	.+982    	; 0x400 <__LOCK_REGION_LENGTH__>
      2a:	d3 c1       	rjmp	.+934    	; 0x3d2 <__vector_9+0xf0>
      2c:	d6 c1       	rjmp	.+940    	; 0x3da <__vector_9+0xf8>
      2e:	e4 c1       	rjmp	.+968    	; 0x3f8 <__vector_9+0x116>
      30:	eb c1       	rjmp	.+982    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      32:	d6 c1       	rjmp	.+940    	; 0x3e0 <__vector_9+0xfe>
      34:	e9 c1       	rjmp	.+978    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      36:	d8 c1       	rjmp	.+944    	; 0x3e8 <__vector_9+0x106>
      38:	e7 c1       	rjmp	.+974    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      3a:	da c1       	rjmp	.+948    	; 0x3f0 <__vector_9+0x10e>
      3c:	e5 c1       	rjmp	.+970    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      3e:	e4 c1       	rjmp	.+968    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      40:	e3 c1       	rjmp	.+966    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      42:	e2 c1       	rjmp	.+964    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      44:	e1 c1       	rjmp	.+962    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      46:	e0 c1       	rjmp	.+960    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      48:	df c1       	rjmp	.+958    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
      4a:	bb c1       	rjmp	.+886    	; 0x3c2 <__vector_9+0xe0>
      4c:	1e c8       	rjmp	.-4036   	; 0xfffff08a <__eeprom_end+0xff7ef08a>
      4e:	b1 c8       	rjmp	.-3742   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      50:	b0 c8       	rjmp	.-3744   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      52:	af c8       	rjmp	.-3746   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      54:	ae c8       	rjmp	.-3748   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      56:	ad c8       	rjmp	.-3750   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      58:	ac c8       	rjmp	.-3752   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      5a:	ab c8       	rjmp	.-3754   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      5c:	16 c8       	rjmp	.-4052   	; 0xfffff08a <__eeprom_end+0xff7ef08a>
      5e:	a9 c8       	rjmp	.-3758   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      60:	a8 c8       	rjmp	.-3760   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      62:	a7 c8       	rjmp	.-3762   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      64:	a6 c8       	rjmp	.-3764   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      66:	a5 c8       	rjmp	.-3766   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      68:	a4 c8       	rjmp	.-3768   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      6a:	a3 c8       	rjmp	.-3770   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      6c:	24 c8       	rjmp	.-4024   	; 0xfffff0b6 <__eeprom_end+0xff7ef0b6>
      6e:	a1 c8       	rjmp	.-3774   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      70:	a0 c8       	rjmp	.-3776   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      72:	9f c8       	rjmp	.-3778   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      74:	9e c8       	rjmp	.-3780   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      76:	9d c8       	rjmp	.-3782   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      78:	9c c8       	rjmp	.-3784   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      7a:	9b c8       	rjmp	.-3786   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      7c:	3d c8       	rjmp	.-3974   	; 0xfffff0f8 <__eeprom_end+0xff7ef0f8>
      7e:	99 c8       	rjmp	.-3790   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      80:	98 c8       	rjmp	.-3792   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      82:	97 c8       	rjmp	.-3794   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      84:	96 c8       	rjmp	.-3796   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      86:	95 c8       	rjmp	.-3798   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      88:	94 c8       	rjmp	.-3800   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      8a:	93 c8       	rjmp	.-3802   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      8c:	38 c8       	rjmp	.-3984   	; 0xfffff0fe <__eeprom_end+0xff7ef0fe>
      8e:	91 c8       	rjmp	.-3806   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      90:	90 c8       	rjmp	.-3808   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      92:	8f c8       	rjmp	.-3810   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      94:	8e c8       	rjmp	.-3812   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      96:	8d c8       	rjmp	.-3814   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      98:	8c c8       	rjmp	.-3816   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      9a:	8b c8       	rjmp	.-3818   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      9c:	2d c8       	rjmp	.-4006   	; 0xfffff0f8 <__eeprom_end+0xff7ef0f8>
      9e:	89 c8       	rjmp	.-3822   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      a0:	88 c8       	rjmp	.-3824   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      a2:	87 c8       	rjmp	.-3826   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      a4:	86 c8       	rjmp	.-3828   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      a6:	85 c8       	rjmp	.-3830   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      a8:	84 c8       	rjmp	.-3832   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      aa:	83 c8       	rjmp	.-3834   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      ac:	82 c8       	rjmp	.-3836   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      ae:	81 c8       	rjmp	.-3838   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      b0:	80 c8       	rjmp	.-3840   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      b2:	7f c8       	rjmp	.-3842   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      b4:	7e c8       	rjmp	.-3844   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      b6:	7d c8       	rjmp	.-3846   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      b8:	7c c8       	rjmp	.-3848   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      ba:	7b c8       	rjmp	.-3850   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      bc:	46 c8       	rjmp	.-3956   	; 0xfffff14a <__eeprom_end+0xff7ef14a>
      be:	79 c8       	rjmp	.-3854   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      c0:	78 c8       	rjmp	.-3856   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      c2:	77 c8       	rjmp	.-3858   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      c4:	76 c8       	rjmp	.-3860   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      c6:	75 c8       	rjmp	.-3862   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      c8:	74 c8       	rjmp	.-3864   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      ca:	73 c8       	rjmp	.-3866   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      cc:	72 c8       	rjmp	.-3868   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      ce:	71 c8       	rjmp	.-3870   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      d0:	70 c8       	rjmp	.-3872   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      d2:	6f c8       	rjmp	.-3874   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      d4:	6e c8       	rjmp	.-3876   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      d6:	6d c8       	rjmp	.-3878   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      d8:	6c c8       	rjmp	.-3880   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      da:	6b c8       	rjmp	.-3882   	; 0xfffff1b2 <__eeprom_end+0xff7ef1b2>
      dc:	3d c8       	rjmp	.-3974   	; 0xfffff158 <__eeprom_end+0xff7ef158>

000000de <__ctors_end>:
      de:	11 24       	eor	r1, r1
      e0:	1f be       	out	0x3f, r1	; 63
      e2:	cf e5       	ldi	r28, 0x5F	; 95
      e4:	d4 e0       	ldi	r29, 0x04	; 4
      e6:	de bf       	out	0x3e, r29	; 62
      e8:	cd bf       	out	0x3d, r28	; 61

000000ea <__do_copy_data>:
      ea:	12 e0       	ldi	r17, 0x02	; 2
      ec:	a0 e6       	ldi	r26, 0x60	; 96
      ee:	b0 e0       	ldi	r27, 0x00	; 0
      f0:	e6 ec       	ldi	r30, 0xC6	; 198
      f2:	f5 e1       	ldi	r31, 0x15	; 21
      f4:	02 c0       	rjmp	.+4      	; 0xfa <__do_copy_data+0x10>
      f6:	05 90       	lpm	r0, Z+
      f8:	0d 92       	st	X+, r0
      fa:	ac 36       	cpi	r26, 0x6C	; 108
      fc:	b1 07       	cpc	r27, r17
      fe:	d9 f7       	brne	.-10     	; 0xf6 <__do_copy_data+0xc>

00000100 <__do_clear_bss>:
     100:	22 e0       	ldi	r18, 0x02	; 2
     102:	ac e6       	ldi	r26, 0x6C	; 108
     104:	b2 e0       	ldi	r27, 0x02	; 2
     106:	01 c0       	rjmp	.+2      	; 0x10a <.do_clear_bss_start>

00000108 <.do_clear_bss_loop>:
     108:	1d 92       	st	X+, r1

0000010a <.do_clear_bss_start>:
     10a:	a6 3c       	cpi	r26, 0xC6	; 198
     10c:	b2 07       	cpc	r27, r18
     10e:	e1 f7       	brne	.-8      	; 0x108 <.do_clear_bss_loop>
     110:	fa d5       	rcall	.+3060   	; 0xd06 <main>
     112:	57 ca       	rjmp	.-2898   	; 0xfffff5c2 <__eeprom_end+0xff7ef5c2>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <EEPROM_read>:
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
}

void twi_setNack()
{
	TWCR = (1 << TWINT) | (1 << TWEN)| (1<<TWIE);
     116:	e1 99       	sbic	0x1c, 1	; 28
     118:	fe cf       	rjmp	.-4      	; 0x116 <EEPROM_read>
     11a:	9f bb       	out	0x1f, r25	; 31
     11c:	8e bb       	out	0x1e, r24	; 30
     11e:	e0 9a       	sbi	0x1c, 0	; 28
     120:	8d b3       	in	r24, 0x1d	; 29
     122:	08 95       	ret

00000124 <EEPROMOlvBizt>:
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	ec 01       	movw	r28, r24
     12c:	ce 01       	movw	r24, r28
     12e:	f3 df       	rcall	.-26     	; 0x116 <EEPROM_read>
     130:	18 2f       	mov	r17, r24
     132:	ce 01       	movw	r24, r28
     134:	f0 df       	rcall	.-32     	; 0x116 <EEPROM_read>
     136:	18 13       	cpse	r17, r24
     138:	f9 cf       	rjmp	.-14     	; 0x12c <EEPROMOlvBizt+0x8>
     13a:	df 91       	pop	r29
     13c:	cf 91       	pop	r28
     13e:	1f 91       	pop	r17
     140:	08 95       	ret

00000142 <EEPROM_write>:
     142:	e1 99       	sbic	0x1c, 1	; 28
     144:	fe cf       	rjmp	.-4      	; 0x142 <EEPROM_write>
     146:	9f bb       	out	0x1f, r25	; 31
     148:	8e bb       	out	0x1e, r24	; 30
     14a:	6d bb       	out	0x1d, r22	; 29
     14c:	f8 94       	cli
     14e:	e2 9a       	sbi	0x1c, 2	; 28
     150:	e1 9a       	sbi	0x1c, 1	; 28
     152:	78 94       	sei
     154:	08 95       	ret

00000156 <EEPROMIrBizt>:
     156:	0f 93       	push	r16
     158:	1f 93       	push	r17
     15a:	cf 93       	push	r28
     15c:	8c 01       	movw	r16, r24
     15e:	c6 2f       	mov	r28, r22
     160:	03 c0       	rjmp	.+6      	; 0x168 <EEPROMIrBizt+0x12>
     162:	6c 2f       	mov	r22, r28
     164:	c8 01       	movw	r24, r16
     166:	ed df       	rcall	.-38     	; 0x142 <EEPROM_write>
     168:	c8 01       	movw	r24, r16
     16a:	d5 df       	rcall	.-86     	; 0x116 <EEPROM_read>
     16c:	8c 13       	cpse	r24, r28
     16e:	f9 cf       	rjmp	.-14     	; 0x162 <EEPROMIrBizt+0xc>
     170:	cf 91       	pop	r28
     172:	1f 91       	pop	r17
     174:	0f 91       	pop	r16
     176:	08 95       	ret

00000178 <Konfig10bitADC>:
     178:	3e 9a       	sbi	0x07, 6	; 7
     17a:	83 e8       	ldi	r24, 0x83	; 131
     17c:	86 b9       	out	0x06, r24	; 6
     17e:	08 95       	ret

00000180 <Beolvas10bitADC>:
     180:	97 b1       	in	r25, 0x07	; 7
     182:	90 7f       	andi	r25, 0xF0	; 240
     184:	89 2b       	or	r24, r25
     186:	87 b9       	out	0x07, r24	; 7
     188:	36 9a       	sbi	0x06, 6	; 6
     18a:	36 99       	sbic	0x06, 6	; 6
     18c:	fe cf       	rjmp	.-4      	; 0x18a <Beolvas10bitADC+0xa>
     18e:	36 9a       	sbi	0x06, 6	; 6
     190:	36 99       	sbic	0x06, 6	; 6
     192:	fe cf       	rjmp	.-4      	; 0x190 <Beolvas10bitADC+0x10>
     194:	84 b1       	in	r24, 0x04	; 4
     196:	25 b1       	in	r18, 0x05	; 5
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	92 2b       	or	r25, r18
     19c:	08 95       	ret

0000019e <KonfigUART>:
     19e:	8f e2       	ldi	r24, 0x2F	; 47
     1a0:	89 b9       	out	0x09, r24	; 9
     1a2:	10 bc       	out	0x20, r1	; 32
     1a4:	80 b5       	in	r24, 0x20	; 32
     1a6:	86 68       	ori	r24, 0x86	; 134
     1a8:	80 bd       	out	0x20, r24	; 32
     1aa:	8a b1       	in	r24, 0x0a	; 10
     1ac:	88 69       	ori	r24, 0x98	; 152
     1ae:	8a b9       	out	0x0a, r24	; 10
     1b0:	08 95       	ret

000001b2 <init>:
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	e0 df       	rcall	.-64     	; 0x178 <Konfig10bitADC>
     1b8:	83 b7       	in	r24, 0x33	; 51
     1ba:	85 60       	ori	r24, 0x05	; 5
     1bc:	83 bf       	out	0x33, r24	; 51
     1be:	89 b7       	in	r24, 0x39	; 57
     1c0:	81 60       	ori	r24, 0x01	; 1
     1c2:	89 bf       	out	0x39, r24	; 57
     1c4:	ab 9a       	sbi	0x15, 3	; 21
     1c6:	a3 9a       	sbi	0x14, 3	; 20
     1c8:	81 b3       	in	r24, 0x11	; 17
     1ca:	8c 60       	ori	r24, 0x0C	; 12
     1cc:	81 bb       	out	0x11, r24	; 17
     1ce:	e7 df       	rcall	.-50     	; 0x19e <KonfigUART>
     1d0:	88 e6       	ldi	r24, 0x68	; 104
     1d2:	80 b9       	out	0x00, r24	; 0
     1d4:	85 e8       	ldi	r24, 0x85	; 133
     1d6:	86 bf       	out	0x36, r24	; 54
     1d8:	8f b5       	in	r24, 0x2f	; 47
     1da:	81 6a       	ori	r24, 0xA1	; 161
     1dc:	8f bd       	out	0x2f, r24	; 47
     1de:	8e b5       	in	r24, 0x2e	; 46
     1e0:	89 60       	ori	r24, 0x09	; 9
     1e2:	8e bd       	out	0x2e, r24	; 46
     1e4:	87 b3       	in	r24, 0x17	; 23
     1e6:	86 60       	ori	r24, 0x06	; 6
     1e8:	87 bb       	out	0x17, r24	; 23
     1ea:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <BiztHoFesz2+0x1>
     1ee:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <BiztHoFesz2>
     1f2:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <BiztHoFesz1+0x1>
     1f6:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <BiztHoFesz1>
     1fa:	88 e1       	ldi	r24, 0x18	; 24
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	92 df       	rcall	.-220    	; 0x124 <EEPROMOlvBizt>
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <BiztHoFesz1+0x1>
     206:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <BiztHoFesz1>
     20a:	89 e1       	ldi	r24, 0x19	; 25
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	8a df       	rcall	.-236    	; 0x124 <EEPROMOlvBizt>
     210:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <BiztHoFesz1>
     214:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     218:	40 e2       	ldi	r20, 0x20	; 32
     21a:	84 9f       	mul	r24, r20
     21c:	c0 01       	movw	r24, r0
     21e:	11 24       	eor	r1, r1
     220:	28 2b       	or	r18, r24
     222:	39 2b       	or	r19, r25
     224:	30 93 67 00 	sts	0x0067, r19	; 0x800067 <BiztHoFesz1+0x1>
     228:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <BiztHoFesz1>
     22c:	8a e1       	ldi	r24, 0x1A	; 26
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	79 df       	rcall	.-270    	; 0x124 <EEPROMOlvBizt>
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <BiztHoFesz2+0x1>
     238:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <BiztHoFesz2>
     23c:	8b e1       	ldi	r24, 0x1B	; 27
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	71 df       	rcall	.-286    	; 0x124 <EEPROMOlvBizt>
     242:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <BiztHoFesz2>
     246:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     24a:	40 e2       	ldi	r20, 0x20	; 32
     24c:	84 9f       	mul	r24, r20
     24e:	c0 01       	movw	r24, r0
     250:	11 24       	eor	r1, r1
     252:	28 2b       	or	r18, r24
     254:	39 2b       	or	r19, r25
     256:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <BiztHoFesz2+0x1>
     25a:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <BiztHoFesz2>
     25e:	c0 e0       	ldi	r28, 0x00	; 0
     260:	d0 e0       	ldi	r29, 0x00	; 0
     262:	fe 01       	movw	r30, r28
     264:	eb 57       	subi	r30, 0x7B	; 123
     266:	fd 4f       	sbci	r31, 0xFD	; 253
     268:	10 82       	st	Z, r1
     26a:	ce 01       	movw	r24, r28
     26c:	5b df       	rcall	.-330    	; 0x124 <EEPROMOlvBizt>
     26e:	fe 01       	movw	r30, r28
     270:	ea 56       	subi	r30, 0x6A	; 106
     272:	fd 4f       	sbci	r31, 0xFD	; 253
     274:	80 83       	st	Z, r24
     276:	21 96       	adiw	r28, 0x01	; 1
     278:	c8 30       	cpi	r28, 0x08	; 8
     27a:	d1 05       	cpc	r29, r1
     27c:	91 f7       	brne	.-28     	; 0x262 <init+0xb0>
     27e:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
     282:	78 94       	sei
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <Crc16Szamolo>:
     28a:	66 23       	and	r22, r22
     28c:	c9 f0       	breq	.+50     	; 0x2c0 <Crc16Szamolo+0x36>
     28e:	dc 01       	movw	r26, r24
     290:	9c 01       	movw	r18, r24
     292:	26 0f       	add	r18, r22
     294:	31 1d       	adc	r19, r1
     296:	b9 01       	movw	r22, r18
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	29 2f       	mov	r18, r25
     29e:	33 27       	eor	r19, r19
     2a0:	4d 91       	ld	r20, X+
     2a2:	fc 01       	movw	r30, r24
     2a4:	e4 27       	eor	r30, r20
     2a6:	ff 27       	eor	r31, r31
     2a8:	ee 0f       	add	r30, r30
     2aa:	ff 1f       	adc	r31, r31
     2ac:	e4 59       	subi	r30, 0x94	; 148
     2ae:	ff 4f       	sbci	r31, 0xFF	; 255
     2b0:	80 81       	ld	r24, Z
     2b2:	91 81       	ldd	r25, Z+1	; 0x01
     2b4:	82 27       	eor	r24, r18
     2b6:	93 27       	eor	r25, r19
     2b8:	a6 17       	cp	r26, r22
     2ba:	b7 07       	cpc	r27, r23
     2bc:	79 f7       	brne	.-34     	; 0x29c <Crc16Szamolo+0x12>
     2be:	08 95       	ret
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	08 95       	ret

000002c6 <RESET_M48>:
     2c6:	ab 98       	cbi	0x15, 3	; 21
     2c8:	8f ef       	ldi	r24, 0xFF	; 255
     2ca:	97 e4       	ldi	r25, 0x47	; 71
     2cc:	01 97       	sbiw	r24, 0x01	; 1
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <RESET_M48+0x6>
     2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <RESET_M48+0xc>
     2d2:	00 00       	nop
     2d4:	ab 9a       	sbi	0x15, 3	; 21
     2d6:	08 95       	ret

000002d8 <RESET>:
     2d8:	f6 df       	rcall	.-20     	; 0x2c6 <RESET_M48>
     2da:	81 b5       	in	r24, 0x21	; 33
     2dc:	88 60       	ori	r24, 0x08	; 8
     2de:	81 bd       	out	0x21, r24	; 33
     2e0:	08 95       	ret

000002e2 <__vector_9>:
     2e2:	1f 92       	push	r1
     2e4:	0f 92       	push	r0
     2e6:	0f b6       	in	r0, 0x3f	; 63
     2e8:	0f 92       	push	r0
     2ea:	11 24       	eor	r1, r1
     2ec:	2f 93       	push	r18
     2ee:	3f 93       	push	r19
     2f0:	4f 93       	push	r20
     2f2:	5f 93       	push	r21
     2f4:	6f 93       	push	r22
     2f6:	7f 93       	push	r23
     2f8:	8f 93       	push	r24
     2fa:	9f 93       	push	r25
     2fc:	af 93       	push	r26
     2fe:	bf 93       	push	r27
     300:	ef 93       	push	r30
     302:	ff 93       	push	r31
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	80 93 71 02 	sts	0x0271, r24	; 0x800271 <FinomFordszValtasKell>
     30a:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <TWIM48ValaszSzamlalo>
     30e:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     312:	07 2e       	mov	r0, r23
     314:	00 0c       	add	r0, r0
     316:	88 0b       	sbc	r24, r24
     318:	99 0b       	sbc	r25, r25
     31a:	f3 d7       	rcall	.+4070   	; 0x1302 <__floatsisf>
     31c:	20 e0       	ldi	r18, 0x00	; 0
     31e:	30 e8       	ldi	r19, 0x80	; 128
     320:	42 e0       	ldi	r20, 0x02	; 2
     322:	51 e4       	ldi	r21, 0x41	; 65
     324:	54 d7       	rcall	.+3752   	; 0x11ce <__cmpsf2>
     326:	18 16       	cp	r1, r24
     328:	4c f0       	brlt	.+18     	; 0x33c <__vector_9+0x5a>
     32a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <TWIM48ValaszSzamlalo>
     32e:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     332:	01 96       	adiw	r24, 0x01	; 1
     334:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     338:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <TWIM48ValaszSzamlalo>
     33c:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <BiztBuzzerSzamlalo>
     340:	8f 5f       	subi	r24, 0xFF	; 255
     342:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <BiztBuzzerSzamlalo>
     346:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <BiztHofEllenorzSzamlalo>
     34a:	8f 5f       	subi	r24, 0xFF	; 255
     34c:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <BiztHofEllenorzSzamlalo>
     350:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <WDKorok>
     354:	8f 5f       	subi	r24, 0xFF	; 255
     356:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <WDKorok>
     35a:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <NemKapJelet>
     35e:	90 91 78 02 	lds	r25, 0x0278	; 0x800278 <NemKapJelet+0x1>
     362:	01 96       	adiw	r24, 0x01	; 1
     364:	90 93 78 02 	sts	0x0278, r25	; 0x800278 <NemKapJelet+0x1>
     368:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <NemKapJelet>
     36c:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <WDKorok>
     370:	89 37       	cpi	r24, 0x79	; 121
     372:	08 f0       	brcs	.+2      	; 0x376 <__vector_9+0x94>
     374:	b1 df       	rcall	.-158    	; 0x2d8 <RESET>
     376:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <NemKapJelet>
     37a:	90 91 78 02 	lds	r25, 0x0278	; 0x800278 <NemKapJelet+0x1>
     37e:	81 32       	cpi	r24, 0x21	; 33
     380:	93 40       	sbci	r25, 0x03	; 3
     382:	0c f0       	brlt	.+2      	; 0x386 <__vector_9+0xa4>
     384:	a9 df       	rcall	.-174    	; 0x2d8 <RESET>
     386:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <BiztBuzzerSzamlalo>
     38a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <BuzzerSzamlMAX>
     38e:	89 17       	cp	r24, r25
     390:	08 f0       	brcs	.+2      	; 0x394 <__vector_9+0xb2>
     392:	42 c0       	rjmp	.+132    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     394:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <BiztBuzzerSzamlalo>
     398:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__data_end>
     39c:	88 23       	and	r24, r24
     39e:	c1 f1       	breq	.+112    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3a0:	83 9b       	sbis	0x10, 3	; 16
     3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <__vector_9+0xc6>
     3a4:	93 98       	cbi	0x12, 3	; 18
     3a6:	01 c0       	rjmp	.+2      	; 0x3aa <__vector_9+0xc8>
     3a8:	93 9a       	sbi	0x12, 3	; 18
     3aa:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <BuzzerSzamlMAX>
     3ae:	8e 2f       	mov	r24, r30
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	32 97       	sbiw	r30, 0x02	; 2
     3b6:	e3 31       	cpi	r30, 0x13	; 19
     3b8:	f1 05       	cpc	r31, r1
     3ba:	30 f5       	brcc	.+76     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3bc:	ed 5e       	subi	r30, 0xED	; 237
     3be:	ff 4f       	sbci	r31, 0xFF	; 255
     3c0:	09 94       	ijmp
     3c2:	82 e0       	ldi	r24, 0x02	; 2
     3c4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3c8:	27 c0       	rjmp	.+78     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3ca:	84 e0       	ldi	r24, 0x04	; 4
     3cc:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3d0:	23 c0       	rjmp	.+70     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3d2:	85 e0       	ldi	r24, 0x05	; 5
     3d4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3d8:	1f c0       	rjmp	.+62     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3da:	88 e0       	ldi	r24, 0x08	; 8
     3dc:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3e0:	8a e0       	ldi	r24, 0x0A	; 10
     3e2:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3e6:	18 c0       	rjmp	.+48     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3e8:	8c e0       	ldi	r24, 0x0C	; 12
     3ea:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3ee:	14 c0       	rjmp	.+40     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f0:	86 e0       	ldi	r24, 0x06	; 6
     3f2:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3f6:	10 c0       	rjmp	.+32     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f8:	83 e0       	ldi	r24, 0x03	; 3
     3fa:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     3fe:	0c c0       	rjmp	.+24     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     400:	84 e1       	ldi	r24, 0x14	; 20
     402:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     406:	08 c0       	rjmp	.+16     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     40e:	04 c0       	rjmp	.+8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     410:	93 98       	cbi	0x12, 3	; 18
     412:	84 e6       	ldi	r24, 0x64	; 100
     414:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <BuzzerSzamlMAX>
     418:	ff 91       	pop	r31
     41a:	ef 91       	pop	r30
     41c:	bf 91       	pop	r27
     41e:	af 91       	pop	r26
     420:	9f 91       	pop	r25
     422:	8f 91       	pop	r24
     424:	7f 91       	pop	r23
     426:	6f 91       	pop	r22
     428:	5f 91       	pop	r21
     42a:	4f 91       	pop	r20
     42c:	3f 91       	pop	r19
     42e:	2f 91       	pop	r18
     430:	0f 90       	pop	r0
     432:	0f be       	out	0x3f, r0	; 63
     434:	0f 90       	pop	r0
     436:	1f 90       	pop	r1
     438:	18 95       	reti

0000043a <UARTAdatKuld>:
     43a:	5d 9b       	sbis	0x0b, 5	; 11
     43c:	fe cf       	rjmp	.-4      	; 0x43a <UARTAdatKuld>
     43e:	8c b9       	out	0x0c, r24	; 12
     440:	08 95       	ret

00000442 <__vector_11>:
     442:	1f 92       	push	r1
     444:	0f 92       	push	r0
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	0f 92       	push	r0
     44a:	11 24       	eor	r1, r1
     44c:	8f 92       	push	r8
     44e:	9f 92       	push	r9
     450:	af 92       	push	r10
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	2f 93       	push	r18
     462:	3f 93       	push	r19
     464:	4f 93       	push	r20
     466:	5f 93       	push	r21
     468:	6f 93       	push	r22
     46a:	7f 93       	push	r23
     46c:	8f 93       	push	r24
     46e:	9f 93       	push	r25
     470:	af 93       	push	r26
     472:	bf 93       	push	r27
     474:	ef 93       	push	r30
     476:	ff 93       	push	r31
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	cd b7       	in	r28, 0x3d	; 61
     47e:	de b7       	in	r29, 0x3e	; 62
     480:	28 97       	sbiw	r28, 0x08	; 8
     482:	de bf       	out	0x3e, r29	; 62
     484:	cd bf       	out	0x3d, r28	; 61
     486:	8c b1       	in	r24, 0x0c	; 12
     488:	8f 3f       	cpi	r24, 0xFF	; 255
     48a:	09 f0       	breq	.+2      	; 0x48e <__stack+0x2f>
     48c:	71 c0       	rjmp	.+226    	; 0x570 <__stack+0x111>
     48e:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     492:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     496:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     49a:	8d e7       	ldi	r24, 0x7D	; 125
     49c:	ce df       	rcall	.-100    	; 0x43a <UARTAdatKuld>
     49e:	2f ef       	ldi	r18, 0xFF	; 255
     4a0:	4f e3       	ldi	r20, 0x3F	; 63
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	21 50       	subi	r18, 0x01	; 1
     4a6:	40 40       	sbci	r20, 0x00	; 0
     4a8:	80 40       	sbci	r24, 0x00	; 0
     4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__stack+0x45>
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__stack+0x4f>
     4ae:	00 00       	nop
     4b0:	86 e9       	ldi	r24, 0x96	; 150
     4b2:	c3 df       	rcall	.-122    	; 0x43a <UARTAdatKuld>
     4b4:	9f ef       	ldi	r25, 0xFF	; 255
     4b6:	ef e3       	ldi	r30, 0x3F	; 63
     4b8:	f2 e0       	ldi	r31, 0x02	; 2
     4ba:	91 50       	subi	r25, 0x01	; 1
     4bc:	e0 40       	sbci	r30, 0x00	; 0
     4be:	f0 40       	sbci	r31, 0x00	; 0
     4c0:	e1 f7       	brne	.-8      	; 0x4ba <__stack+0x5b>
     4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__stack+0x65>
     4c4:	00 00       	nop
     4c6:	8a e0       	ldi	r24, 0x0A	; 10
     4c8:	b8 df       	rcall	.-144    	; 0x43a <UARTAdatKuld>
     4ca:	8f ef       	ldi	r24, 0xFF	; 255
     4cc:	97 e4       	ldi	r25, 0x47	; 71
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <__stack+0x6f>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__stack+0x75>
     4d4:	00 00       	nop
     4d6:	84 e1       	ldi	r24, 0x14	; 20
     4d8:	b0 df       	rcall	.-160    	; 0x43a <UARTAdatKuld>
     4da:	ef ef       	ldi	r30, 0xFF	; 255
     4dc:	f7 e4       	ldi	r31, 0x47	; 71
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <__stack+0x7f>
     4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <__stack+0x85>
     4e4:	00 00       	nop
     4e6:	8e e1       	ldi	r24, 0x1E	; 30
     4e8:	a8 df       	rcall	.-176    	; 0x43a <UARTAdatKuld>
     4ea:	8f ef       	ldi	r24, 0xFF	; 255
     4ec:	97 e4       	ldi	r25, 0x47	; 71
     4ee:	01 97       	sbiw	r24, 0x01	; 1
     4f0:	f1 f7       	brne	.-4      	; 0x4ee <__stack+0x8f>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <__stack+0x95>
     4f4:	00 00       	nop
     4f6:	88 e2       	ldi	r24, 0x28	; 40
     4f8:	a0 df       	rcall	.-192    	; 0x43a <UARTAdatKuld>
     4fa:	ef ef       	ldi	r30, 0xFF	; 255
     4fc:	f7 e4       	ldi	r31, 0x47	; 71
     4fe:	31 97       	sbiw	r30, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <__stack+0x9f>
     502:	00 c0       	rjmp	.+0      	; 0x504 <__stack+0xa5>
     504:	00 00       	nop
     506:	82 e3       	ldi	r24, 0x32	; 50
     508:	98 df       	rcall	.-208    	; 0x43a <UARTAdatKuld>
     50a:	8f ef       	ldi	r24, 0xFF	; 255
     50c:	97 e4       	ldi	r25, 0x47	; 71
     50e:	01 97       	sbiw	r24, 0x01	; 1
     510:	f1 f7       	brne	.-4      	; 0x50e <__stack+0xaf>
     512:	00 c0       	rjmp	.+0      	; 0x514 <__stack+0xb5>
     514:	00 00       	nop
     516:	8c e3       	ldi	r24, 0x3C	; 60
     518:	90 df       	rcall	.-224    	; 0x43a <UARTAdatKuld>
     51a:	ef ef       	ldi	r30, 0xFF	; 255
     51c:	f7 e4       	ldi	r31, 0x47	; 71
     51e:	31 97       	sbiw	r30, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <__stack+0xbf>
     522:	00 c0       	rjmp	.+0      	; 0x524 <__stack+0xc5>
     524:	00 00       	nop
     526:	86 e4       	ldi	r24, 0x46	; 70
     528:	88 df       	rcall	.-240    	; 0x43a <UARTAdatKuld>
     52a:	8f ef       	ldi	r24, 0xFF	; 255
     52c:	97 e4       	ldi	r25, 0x47	; 71
     52e:	01 97       	sbiw	r24, 0x01	; 1
     530:	f1 f7       	brne	.-4      	; 0x52e <__stack+0xcf>
     532:	00 c0       	rjmp	.+0      	; 0x534 <__stack+0xd5>
     534:	00 00       	nop
     536:	80 e5       	ldi	r24, 0x50	; 80
     538:	80 df       	rcall	.-256    	; 0x43a <UARTAdatKuld>
     53a:	ef ef       	ldi	r30, 0xFF	; 255
     53c:	f7 e4       	ldi	r31, 0x47	; 71
     53e:	31 97       	sbiw	r30, 0x01	; 1
     540:	f1 f7       	brne	.-4      	; 0x53e <__stack+0xdf>
     542:	00 c0       	rjmp	.+0      	; 0x544 <__stack+0xe5>
     544:	00 00       	nop
     546:	83 e2       	ldi	r24, 0x23	; 35
     548:	78 df       	rcall	.-272    	; 0x43a <UARTAdatKuld>
     54a:	8f ef       	ldi	r24, 0xFF	; 255
     54c:	97 e4       	ldi	r25, 0x47	; 71
     54e:	01 97       	sbiw	r24, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <__stack+0xef>
     552:	00 c0       	rjmp	.+0      	; 0x554 <__stack+0xf5>
     554:	00 00       	nop
     556:	84 e2       	ldi	r24, 0x24	; 36
     558:	70 df       	rcall	.-288    	; 0x43a <UARTAdatKuld>
     55a:	ef ef       	ldi	r30, 0xFF	; 255
     55c:	f7 e4       	ldi	r31, 0x47	; 71
     55e:	31 97       	sbiw	r30, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <__stack+0xff>
     562:	00 c0       	rjmp	.+0      	; 0x564 <__stack+0x105>
     564:	00 00       	nop
     566:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     56a:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     56e:	ce c2       	rjmp	.+1436   	; 0xb0c <__stack+0x6ad>
     570:	8c b1       	in	r24, 0x0c	; 12
     572:	8b 36       	cpi	r24, 0x6B	; 107
     574:	61 f4       	brne	.+24     	; 0x58e <__stack+0x12f>
     576:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     57a:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <UARTStatus>
     584:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     588:	8b e6       	ldi	r24, 0x6B	; 107
     58a:	57 df       	rcall	.-338    	; 0x43a <UARTAdatKuld>
     58c:	bf c2       	rjmp	.+1406   	; 0xb0c <__stack+0x6ad>
     58e:	8c b1       	in	r24, 0x0c	; 12
     590:	8d 37       	cpi	r24, 0x7D	; 125
     592:	61 f4       	brne	.+24     	; 0x5ac <__stack+0x14d>
     594:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     598:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     59c:	82 e0       	ldi	r24, 0x02	; 2
     59e:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <UARTStatus>
     5a2:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     5a6:	8d e7       	ldi	r24, 0x7D	; 125
     5a8:	48 df       	rcall	.-368    	; 0x43a <UARTAdatKuld>
     5aa:	b0 c2       	rjmp	.+1376   	; 0xb0c <__stack+0x6ad>
     5ac:	8c b1       	in	r24, 0x0c	; 12
     5ae:	8e 36       	cpi	r24, 0x6E	; 110
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <__stack+0x155>
     5b2:	5d c0       	rjmp	.+186    	; 0x66e <__stack+0x20f>
     5b4:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     5b8:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     5bc:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     5c0:	3c df       	rcall	.-392    	; 0x43a <UARTAdatKuld>
     5c2:	ce 01       	movw	r24, r28
     5c4:	01 96       	adiw	r24, 0x01	; 1
     5c6:	7c 01       	movw	r14, r24
     5c8:	6c 01       	movw	r12, r24
     5ca:	00 e0       	ldi	r16, 0x00	; 0
     5cc:	10 e0       	ldi	r17, 0x00	; 0
     5ce:	c8 01       	movw	r24, r16
     5d0:	a2 dd       	rcall	.-1212   	; 0x116 <EEPROM_read>
     5d2:	68 2f       	mov	r22, r24
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	91 d6       	rcall	.+3362   	; 0x12fe <__floatunsisf>
     5dc:	23 e3       	ldi	r18, 0x33	; 51
     5de:	33 e3       	ldi	r19, 0x33	; 51
     5e0:	43 e2       	ldi	r20, 0x23	; 35
     5e2:	50 e4       	ldi	r21, 0x40	; 64
     5e4:	f8 d5       	rcall	.+3056   	; 0x11d6 <__divsf3>
     5e6:	a4 d7       	rcall	.+3912   	; 0x1530 <round>
     5e8:	5e d6       	rcall	.+3260   	; 0x12a6 <__fixunssfsi>
     5ea:	f6 01       	movw	r30, r12
     5ec:	61 93       	st	Z+, r22
     5ee:	6f 01       	movw	r12, r30
     5f0:	0f 5f       	subi	r16, 0xFF	; 255
     5f2:	1f 4f       	sbci	r17, 0xFF	; 255
     5f4:	08 30       	cpi	r16, 0x08	; 8
     5f6:	11 05       	cpc	r17, r1
     5f8:	51 f7       	brne	.-44     	; 0x5ce <__stack+0x16f>
     5fa:	5e 01       	movw	r10, r28
     5fc:	f9 e0       	ldi	r31, 0x09	; 9
     5fe:	af 0e       	add	r10, r31
     600:	b1 1c       	adc	r11, r1
     602:	f7 01       	movw	r30, r14
     604:	00 e0       	ldi	r16, 0x00	; 0
     606:	d1 2c       	mov	r13, r1
     608:	10 e0       	ldi	r17, 0x00	; 0
     60a:	91 91       	ld	r25, Z+
     60c:	90 ff       	sbrs	r25, 0
     60e:	02 c0       	rjmp	.+4      	; 0x614 <__stack+0x1b5>
     610:	1f 5f       	subi	r17, 0xFF	; 255
     612:	0f 5f       	subi	r16, 0xFF	; 255
     614:	91 ff       	sbrs	r25, 1
     616:	02 c0       	rjmp	.+4      	; 0x61c <__stack+0x1bd>
     618:	1f 5f       	subi	r17, 0xFF	; 255
     61a:	d3 94       	inc	r13
     61c:	92 ff       	sbrs	r25, 2
     61e:	02 c0       	rjmp	.+4      	; 0x624 <__stack+0x1c5>
     620:	1f 5f       	subi	r17, 0xFF	; 255
     622:	0f 5f       	subi	r16, 0xFF	; 255
     624:	93 ff       	sbrs	r25, 3
     626:	02 c0       	rjmp	.+4      	; 0x62c <__stack+0x1cd>
     628:	1f 5f       	subi	r17, 0xFF	; 255
     62a:	d3 94       	inc	r13
     62c:	94 ff       	sbrs	r25, 4
     62e:	02 c0       	rjmp	.+4      	; 0x634 <__stack+0x1d5>
     630:	1f 5f       	subi	r17, 0xFF	; 255
     632:	0f 5f       	subi	r16, 0xFF	; 255
     634:	95 ff       	sbrs	r25, 5
     636:	02 c0       	rjmp	.+4      	; 0x63c <__stack+0x1dd>
     638:	1f 5f       	subi	r17, 0xFF	; 255
     63a:	d3 94       	inc	r13
     63c:	96 ff       	sbrs	r25, 6
     63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x1e5>
     640:	1f 5f       	subi	r17, 0xFF	; 255
     642:	0f 5f       	subi	r16, 0xFF	; 255
     644:	99 23       	and	r25, r25
     646:	14 f4       	brge	.+4      	; 0x64c <__stack+0x1ed>
     648:	1f 5f       	subi	r17, 0xFF	; 255
     64a:	d3 94       	inc	r13
     64c:	ea 15       	cp	r30, r10
     64e:	fb 05       	cpc	r31, r11
     650:	e1 f6       	brne	.-72     	; 0x60a <__stack+0x1ab>
     652:	f7 01       	movw	r30, r14
     654:	81 91       	ld	r24, Z+
     656:	7f 01       	movw	r14, r30
     658:	f0 de       	rcall	.-544    	; 0x43a <UARTAdatKuld>
     65a:	ae 14       	cp	r10, r14
     65c:	bf 04       	cpc	r11, r15
     65e:	c9 f7       	brne	.-14     	; 0x652 <__stack+0x1f3>
     660:	81 2f       	mov	r24, r17
     662:	eb de       	rcall	.-554    	; 0x43a <UARTAdatKuld>
     664:	8d 2d       	mov	r24, r13
     666:	e9 de       	rcall	.-558    	; 0x43a <UARTAdatKuld>
     668:	80 2f       	mov	r24, r16
     66a:	e7 de       	rcall	.-562    	; 0x43a <UARTAdatKuld>
     66c:	4f c2       	rjmp	.+1182   	; 0xb0c <__stack+0x6ad>
     66e:	8c b1       	in	r24, 0x0c	; 12
     670:	83 37       	cpi	r24, 0x73	; 115
     672:	09 f0       	breq	.+2      	; 0x676 <__stack+0x217>
     674:	be c0       	rjmp	.+380    	; 0x7f2 <__stack+0x393>
     676:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     67a:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     67e:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     682:	db de       	rcall	.-586    	; 0x43a <UARTAdatKuld>
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	7c dd       	rcall	.-1288   	; 0x180 <Beolvas10bitADC>
     688:	89 37       	cpi	r24, 0x79	; 121
     68a:	91 05       	cpc	r25, r1
     68c:	2c f0       	brlt	.+10     	; 0x698 <__stack+0x239>
     68e:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <SZENZ1+0x1>
     692:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <SZENZ1>
     696:	04 c0       	rjmp	.+8      	; 0x6a0 <__stack+0x241>
     698:	10 92 75 02 	sts	0x0275, r1	; 0x800275 <SZENZ1+0x1>
     69c:	10 92 74 02 	sts	0x0274, r1	; 0x800274 <SZENZ1>
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	6e dd       	rcall	.-1316   	; 0x180 <Beolvas10bitADC>
     6a4:	89 37       	cpi	r24, 0x79	; 121
     6a6:	91 05       	cpc	r25, r1
     6a8:	2c f0       	brlt	.+10     	; 0x6b4 <__stack+0x255>
     6aa:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <SZENZ2+0x1>
     6ae:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <SZENZ2>
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__stack+0x25d>
     6b4:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <SZENZ2+0x1>
     6b8:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <SZENZ2>
     6bc:	80 90 74 02 	lds	r8, 0x0274	; 0x800274 <SZENZ1>
     6c0:	90 90 75 02 	lds	r9, 0x0275	; 0x800275 <SZENZ1+0x1>
     6c4:	88 2d       	mov	r24, r8
     6c6:	8f 73       	andi	r24, 0x3F	; 63
     6c8:	c0 90 74 02 	lds	r12, 0x0274	; 0x800274 <SZENZ1>
     6cc:	d0 90 75 02 	lds	r13, 0x0275	; 0x800275 <SZENZ1+0x1>
     6d0:	f0 ec       	ldi	r31, 0xC0	; 192
     6d2:	cf 22       	and	r12, r31
     6d4:	ff e0       	ldi	r31, 0x0F	; 15
     6d6:	df 22       	and	r13, r31
     6d8:	0c 2c       	mov	r0, r12
     6da:	cd 2c       	mov	r12, r13
     6dc:	00 0c       	add	r0, r0
     6de:	cc 1c       	adc	r12, r12
     6e0:	dd 08       	sbc	r13, r13
     6e2:	00 0c       	add	r0, r0
     6e4:	cc 1c       	adc	r12, r12
     6e6:	dd 1c       	adc	r13, r13
     6e8:	a0 90 72 02 	lds	r10, 0x0272	; 0x800272 <SZENZ2>
     6ec:	b0 90 73 02 	lds	r11, 0x0273	; 0x800273 <SZENZ2+0x1>
     6f0:	1a 2d       	mov	r17, r10
     6f2:	1f 73       	andi	r17, 0x3F	; 63
     6f4:	e0 90 72 02 	lds	r14, 0x0272	; 0x800272 <SZENZ2>
     6f8:	f0 90 73 02 	lds	r15, 0x0273	; 0x800273 <SZENZ2+0x1>
     6fc:	20 ec       	ldi	r18, 0xC0	; 192
     6fe:	e2 22       	and	r14, r18
     700:	2f e0       	ldi	r18, 0x0F	; 15
     702:	f2 22       	and	r15, r18
     704:	0e 2c       	mov	r0, r14
     706:	ef 2c       	mov	r14, r15
     708:	00 0c       	add	r0, r0
     70a:	ee 1c       	adc	r14, r14
     70c:	ff 08       	sbc	r15, r15
     70e:	00 0c       	add	r0, r0
     710:	ee 1c       	adc	r14, r14
     712:	ff 1c       	adc	r15, r15
     714:	92 de       	rcall	.-732    	; 0x43a <UARTAdatKuld>
     716:	8c 2d       	mov	r24, r12
     718:	90 de       	rcall	.-736    	; 0x43a <UARTAdatKuld>
     71a:	81 2f       	mov	r24, r17
     71c:	8e de       	rcall	.-740    	; 0x43a <UARTAdatKuld>
     71e:	8e 2d       	mov	r24, r14
     720:	8c de       	rcall	.-744    	; 0x43a <UARTAdatKuld>
     722:	18 2d       	mov	r17, r8
     724:	11 70       	andi	r17, 0x01	; 1
     726:	81 fe       	sbrs	r8, 1
     728:	04 c0       	rjmp	.+8      	; 0x732 <__stack+0x2d3>
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	81 0f       	add	r24, r17
     72e:	01 e0       	ldi	r16, 0x01	; 1
     730:	02 c0       	rjmp	.+4      	; 0x736 <__stack+0x2d7>
     732:	81 2f       	mov	r24, r17
     734:	00 e0       	ldi	r16, 0x00	; 0
     736:	82 fe       	sbrs	r8, 2
     738:	02 c0       	rjmp	.+4      	; 0x73e <__stack+0x2df>
     73a:	8f 5f       	subi	r24, 0xFF	; 255
     73c:	1f 5f       	subi	r17, 0xFF	; 255
     73e:	83 fe       	sbrs	r8, 3
     740:	02 c0       	rjmp	.+4      	; 0x746 <__stack+0x2e7>
     742:	8f 5f       	subi	r24, 0xFF	; 255
     744:	0f 5f       	subi	r16, 0xFF	; 255
     746:	84 fe       	sbrs	r8, 4
     748:	02 c0       	rjmp	.+4      	; 0x74e <__stack+0x2ef>
     74a:	8f 5f       	subi	r24, 0xFF	; 255
     74c:	1f 5f       	subi	r17, 0xFF	; 255
     74e:	85 fe       	sbrs	r8, 5
     750:	02 c0       	rjmp	.+4      	; 0x756 <__stack+0x2f7>
     752:	8f 5f       	subi	r24, 0xFF	; 255
     754:	0f 5f       	subi	r16, 0xFF	; 255
     756:	c0 fe       	sbrs	r12, 0
     758:	02 c0       	rjmp	.+4      	; 0x75e <__stack+0x2ff>
     75a:	8f 5f       	subi	r24, 0xFF	; 255
     75c:	1f 5f       	subi	r17, 0xFF	; 255
     75e:	c1 fe       	sbrs	r12, 1
     760:	02 c0       	rjmp	.+4      	; 0x766 <__stack+0x307>
     762:	8f 5f       	subi	r24, 0xFF	; 255
     764:	0f 5f       	subi	r16, 0xFF	; 255
     766:	c2 fe       	sbrs	r12, 2
     768:	02 c0       	rjmp	.+4      	; 0x76e <__stack+0x30f>
     76a:	8f 5f       	subi	r24, 0xFF	; 255
     76c:	1f 5f       	subi	r17, 0xFF	; 255
     76e:	c3 fe       	sbrs	r12, 3
     770:	02 c0       	rjmp	.+4      	; 0x776 <__stack+0x317>
     772:	8f 5f       	subi	r24, 0xFF	; 255
     774:	0f 5f       	subi	r16, 0xFF	; 255
     776:	c4 fe       	sbrs	r12, 4
     778:	02 c0       	rjmp	.+4      	; 0x77e <__stack+0x31f>
     77a:	8f 5f       	subi	r24, 0xFF	; 255
     77c:	1f 5f       	subi	r17, 0xFF	; 255
     77e:	c5 fe       	sbrs	r12, 5
     780:	02 c0       	rjmp	.+4      	; 0x786 <__stack+0x327>
     782:	8f 5f       	subi	r24, 0xFF	; 255
     784:	0f 5f       	subi	r16, 0xFF	; 255
     786:	a0 fe       	sbrs	r10, 0
     788:	02 c0       	rjmp	.+4      	; 0x78e <__stack+0x32f>
     78a:	8f 5f       	subi	r24, 0xFF	; 255
     78c:	1f 5f       	subi	r17, 0xFF	; 255
     78e:	a1 fe       	sbrs	r10, 1
     790:	02 c0       	rjmp	.+4      	; 0x796 <__stack+0x337>
     792:	8f 5f       	subi	r24, 0xFF	; 255
     794:	0f 5f       	subi	r16, 0xFF	; 255
     796:	a2 fe       	sbrs	r10, 2
     798:	02 c0       	rjmp	.+4      	; 0x79e <__stack+0x33f>
     79a:	8f 5f       	subi	r24, 0xFF	; 255
     79c:	1f 5f       	subi	r17, 0xFF	; 255
     79e:	a3 fe       	sbrs	r10, 3
     7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <__stack+0x347>
     7a2:	8f 5f       	subi	r24, 0xFF	; 255
     7a4:	0f 5f       	subi	r16, 0xFF	; 255
     7a6:	a4 fe       	sbrs	r10, 4
     7a8:	02 c0       	rjmp	.+4      	; 0x7ae <__stack+0x34f>
     7aa:	8f 5f       	subi	r24, 0xFF	; 255
     7ac:	1f 5f       	subi	r17, 0xFF	; 255
     7ae:	a5 fe       	sbrs	r10, 5
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <__stack+0x357>
     7b2:	8f 5f       	subi	r24, 0xFF	; 255
     7b4:	0f 5f       	subi	r16, 0xFF	; 255
     7b6:	e0 fe       	sbrs	r14, 0
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <__stack+0x35f>
     7ba:	8f 5f       	subi	r24, 0xFF	; 255
     7bc:	1f 5f       	subi	r17, 0xFF	; 255
     7be:	e1 fe       	sbrs	r14, 1
     7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <__stack+0x367>
     7c2:	8f 5f       	subi	r24, 0xFF	; 255
     7c4:	0f 5f       	subi	r16, 0xFF	; 255
     7c6:	e2 fe       	sbrs	r14, 2
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <__stack+0x36f>
     7ca:	8f 5f       	subi	r24, 0xFF	; 255
     7cc:	1f 5f       	subi	r17, 0xFF	; 255
     7ce:	e3 fe       	sbrs	r14, 3
     7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <__stack+0x377>
     7d2:	8f 5f       	subi	r24, 0xFF	; 255
     7d4:	0f 5f       	subi	r16, 0xFF	; 255
     7d6:	e4 fe       	sbrs	r14, 4
     7d8:	02 c0       	rjmp	.+4      	; 0x7de <__stack+0x37f>
     7da:	8f 5f       	subi	r24, 0xFF	; 255
     7dc:	1f 5f       	subi	r17, 0xFF	; 255
     7de:	e5 fe       	sbrs	r14, 5
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <__stack+0x387>
     7e2:	8f 5f       	subi	r24, 0xFF	; 255
     7e4:	0f 5f       	subi	r16, 0xFF	; 255
     7e6:	29 de       	rcall	.-942    	; 0x43a <UARTAdatKuld>
     7e8:	80 2f       	mov	r24, r16
     7ea:	27 de       	rcall	.-946    	; 0x43a <UARTAdatKuld>
     7ec:	81 2f       	mov	r24, r17
     7ee:	25 de       	rcall	.-950    	; 0x43a <UARTAdatKuld>
     7f0:	8d c1       	rjmp	.+794    	; 0xb0c <__stack+0x6ad>
     7f2:	8c b1       	in	r24, 0x0c	; 12
     7f4:	86 37       	cpi	r24, 0x76	; 118
     7f6:	09 f0       	breq	.+2      	; 0x7fa <__stack+0x39b>
     7f8:	9a c0       	rjmp	.+308    	; 0x92e <__stack+0x4cf>
     7fa:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     7fe:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     802:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     806:	19 de       	rcall	.-974    	; 0x43a <UARTAdatKuld>
     808:	80 90 66 00 	lds	r8, 0x0066	; 0x800066 <BiztHoFesz1>
     80c:	90 90 67 00 	lds	r9, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     810:	88 2d       	mov	r24, r8
     812:	8f 71       	andi	r24, 0x1F	; 31
     814:	c0 90 66 00 	lds	r12, 0x0066	; 0x800066 <BiztHoFesz1>
     818:	d0 90 67 00 	lds	r13, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     81c:	40 ee       	ldi	r20, 0xE0	; 224
     81e:	c4 22       	and	r12, r20
     820:	43 e0       	ldi	r20, 0x03	; 3
     822:	d4 22       	and	r13, r20
     824:	d6 94       	lsr	r13
     826:	c7 94       	ror	r12
     828:	d6 94       	lsr	r13
     82a:	c7 94       	ror	r12
     82c:	d6 94       	lsr	r13
     82e:	c7 94       	ror	r12
     830:	d6 94       	lsr	r13
     832:	c7 94       	ror	r12
     834:	d6 94       	lsr	r13
     836:	c7 94       	ror	r12
     838:	a0 90 64 00 	lds	r10, 0x0064	; 0x800064 <BiztHoFesz2>
     83c:	b0 90 65 00 	lds	r11, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     840:	1a 2d       	mov	r17, r10
     842:	1f 71       	andi	r17, 0x1F	; 31
     844:	e0 90 64 00 	lds	r14, 0x0064	; 0x800064 <BiztHoFesz2>
     848:	f0 90 65 00 	lds	r15, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     84c:	90 ee       	ldi	r25, 0xE0	; 224
     84e:	e9 22       	and	r14, r25
     850:	93 e0       	ldi	r25, 0x03	; 3
     852:	f9 22       	and	r15, r25
     854:	f6 94       	lsr	r15
     856:	e7 94       	ror	r14
     858:	f6 94       	lsr	r15
     85a:	e7 94       	ror	r14
     85c:	f6 94       	lsr	r15
     85e:	e7 94       	ror	r14
     860:	f6 94       	lsr	r15
     862:	e7 94       	ror	r14
     864:	f6 94       	lsr	r15
     866:	e7 94       	ror	r14
     868:	e8 dd       	rcall	.-1072   	; 0x43a <UARTAdatKuld>
     86a:	8c 2d       	mov	r24, r12
     86c:	e6 dd       	rcall	.-1076   	; 0x43a <UARTAdatKuld>
     86e:	81 2f       	mov	r24, r17
     870:	e4 dd       	rcall	.-1080   	; 0x43a <UARTAdatKuld>
     872:	8e 2d       	mov	r24, r14
     874:	e2 dd       	rcall	.-1084   	; 0x43a <UARTAdatKuld>
     876:	18 2d       	mov	r17, r8
     878:	11 70       	andi	r17, 0x01	; 1
     87a:	81 fe       	sbrs	r8, 1
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x427>
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	81 0f       	add	r24, r17
     882:	01 e0       	ldi	r16, 0x01	; 1
     884:	02 c0       	rjmp	.+4      	; 0x88a <__stack+0x42b>
     886:	81 2f       	mov	r24, r17
     888:	00 e0       	ldi	r16, 0x00	; 0
     88a:	82 fe       	sbrs	r8, 2
     88c:	02 c0       	rjmp	.+4      	; 0x892 <__stack+0x433>
     88e:	8f 5f       	subi	r24, 0xFF	; 255
     890:	1f 5f       	subi	r17, 0xFF	; 255
     892:	83 fe       	sbrs	r8, 3
     894:	02 c0       	rjmp	.+4      	; 0x89a <__stack+0x43b>
     896:	8f 5f       	subi	r24, 0xFF	; 255
     898:	0f 5f       	subi	r16, 0xFF	; 255
     89a:	84 fe       	sbrs	r8, 4
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__stack+0x443>
     89e:	8f 5f       	subi	r24, 0xFF	; 255
     8a0:	1f 5f       	subi	r17, 0xFF	; 255
     8a2:	96 01       	movw	r18, r12
     8a4:	33 27       	eor	r19, r19
     8a6:	c0 fe       	sbrs	r12, 0
     8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__stack+0x44f>
     8aa:	8f 5f       	subi	r24, 0xFF	; 255
     8ac:	1f 5f       	subi	r17, 0xFF	; 255
     8ae:	21 ff       	sbrs	r18, 1
     8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <__stack+0x457>
     8b2:	8f 5f       	subi	r24, 0xFF	; 255
     8b4:	0f 5f       	subi	r16, 0xFF	; 255
     8b6:	22 ff       	sbrs	r18, 2
     8b8:	02 c0       	rjmp	.+4      	; 0x8be <__stack+0x45f>
     8ba:	8f 5f       	subi	r24, 0xFF	; 255
     8bc:	1f 5f       	subi	r17, 0xFF	; 255
     8be:	23 ff       	sbrs	r18, 3
     8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <__stack+0x467>
     8c2:	8f 5f       	subi	r24, 0xFF	; 255
     8c4:	0f 5f       	subi	r16, 0xFF	; 255
     8c6:	24 ff       	sbrs	r18, 4
     8c8:	02 c0       	rjmp	.+4      	; 0x8ce <__stack+0x46f>
     8ca:	8f 5f       	subi	r24, 0xFF	; 255
     8cc:	1f 5f       	subi	r17, 0xFF	; 255
     8ce:	a0 fe       	sbrs	r10, 0
     8d0:	02 c0       	rjmp	.+4      	; 0x8d6 <__stack+0x477>
     8d2:	8f 5f       	subi	r24, 0xFF	; 255
     8d4:	1f 5f       	subi	r17, 0xFF	; 255
     8d6:	a1 fe       	sbrs	r10, 1
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <__stack+0x47f>
     8da:	8f 5f       	subi	r24, 0xFF	; 255
     8dc:	0f 5f       	subi	r16, 0xFF	; 255
     8de:	a2 fe       	sbrs	r10, 2
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <__stack+0x487>
     8e2:	8f 5f       	subi	r24, 0xFF	; 255
     8e4:	1f 5f       	subi	r17, 0xFF	; 255
     8e6:	a3 fe       	sbrs	r10, 3
     8e8:	02 c0       	rjmp	.+4      	; 0x8ee <__stack+0x48f>
     8ea:	8f 5f       	subi	r24, 0xFF	; 255
     8ec:	0f 5f       	subi	r16, 0xFF	; 255
     8ee:	a4 fe       	sbrs	r10, 4
     8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <__stack+0x497>
     8f2:	8f 5f       	subi	r24, 0xFF	; 255
     8f4:	1f 5f       	subi	r17, 0xFF	; 255
     8f6:	97 01       	movw	r18, r14
     8f8:	33 27       	eor	r19, r19
     8fa:	e0 fe       	sbrs	r14, 0
     8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0x4a3>
     8fe:	8f 5f       	subi	r24, 0xFF	; 255
     900:	1f 5f       	subi	r17, 0xFF	; 255
     902:	21 ff       	sbrs	r18, 1
     904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0x4ab>
     906:	8f 5f       	subi	r24, 0xFF	; 255
     908:	0f 5f       	subi	r16, 0xFF	; 255
     90a:	22 ff       	sbrs	r18, 2
     90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0x4b3>
     90e:	8f 5f       	subi	r24, 0xFF	; 255
     910:	1f 5f       	subi	r17, 0xFF	; 255
     912:	23 ff       	sbrs	r18, 3
     914:	02 c0       	rjmp	.+4      	; 0x91a <__stack+0x4bb>
     916:	8f 5f       	subi	r24, 0xFF	; 255
     918:	0f 5f       	subi	r16, 0xFF	; 255
     91a:	24 ff       	sbrs	r18, 4
     91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x4c3>
     91e:	8f 5f       	subi	r24, 0xFF	; 255
     920:	1f 5f       	subi	r17, 0xFF	; 255
     922:	8b dd       	rcall	.-1258   	; 0x43a <UARTAdatKuld>
     924:	80 2f       	mov	r24, r16
     926:	89 dd       	rcall	.-1262   	; 0x43a <UARTAdatKuld>
     928:	81 2f       	mov	r24, r17
     92a:	87 dd       	rcall	.-1266   	; 0x43a <UARTAdatKuld>
     92c:	ef c0       	rjmp	.+478    	; 0xb0c <__stack+0x6ad>
     92e:	8c b1       	in	r24, 0x0c	; 12
     930:	88 37       	cpi	r24, 0x78	; 120
     932:	99 f4       	brne	.+38     	; 0x95a <__stack+0x4fb>
     934:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     938:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     93c:	7e dd       	rcall	.-1284   	; 0x43a <UARTAdatKuld>
     93e:	83 e0       	ldi	r24, 0x03	; 3
     940:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <UARTStatus>
     944:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <BiztHoFesz2FOGADBUFF+0x1>
     948:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <BiztHoFesz2FOGADBUFF>
     94c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <BiztHoFesz1FOGADBUFF+0x1>
     950:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <BiztHoFesz1FOGADBUFF>
     954:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     958:	d9 c0       	rjmp	.+434    	; 0xb0c <__stack+0x6ad>
     95a:	8c b1       	in	r24, 0x0c	; 12
     95c:	85 36       	cpi	r24, 0x65	; 101
     95e:	08 f0       	brcs	.+2      	; 0x962 <__stack+0x503>
     960:	d5 c0       	rjmp	.+426    	; 0xb0c <__stack+0x6ad>
     962:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <UARTStatus>
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	69 f5       	brne	.+90     	; 0x9c4 <__stack+0x565>
     96a:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     96e:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     972:	00 91 7b 02 	lds	r16, 0x027B	; 0x80027b <hanyadikKit>
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	6c b1       	in	r22, 0x0c	; 12
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	be d4       	rcall	.+2428   	; 0x12fe <__floatunsisf>
     982:	23 e3       	ldi	r18, 0x33	; 51
     984:	33 e3       	ldi	r19, 0x33	; 51
     986:	43 e2       	ldi	r20, 0x23	; 35
     988:	50 e4       	ldi	r21, 0x40	; 64
     98a:	6f d5       	rcall	.+2782   	; 0x146a <__mulsf3>
     98c:	d1 d5       	rcall	.+2978   	; 0x1530 <round>
     98e:	8b d4       	rcall	.+2326   	; 0x12a6 <__fixunssfsi>
     990:	f8 01       	movw	r30, r16
     992:	ea 56       	subi	r30, 0x6A	; 106
     994:	fd 4f       	sbci	r31, 0xFD	; 253
     996:	60 83       	st	Z, r22
     998:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     99c:	8f 5f       	subi	r24, 0xFF	; 255
     99e:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <hanyadikKit>
     9a2:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     9a6:	88 30       	cpi	r24, 0x08	; 8
     9a8:	31 f4       	brne	.+12     	; 0x9b6 <__stack+0x557>
     9aa:	8c ed       	ldi	r24, 0xDC	; 220
     9ac:	46 dd       	rcall	.-1396   	; 0x43a <UARTAdatKuld>
     9ae:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     9b2:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     9b6:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     9ba:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     9be:	8c b1       	in	r24, 0x0c	; 12
     9c0:	3c dd       	rcall	.-1416   	; 0x43a <UARTAdatKuld>
     9c2:	a4 c0       	rjmp	.+328    	; 0xb0c <__stack+0x6ad>
     9c4:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <UARTStatus>
     9c8:	82 30       	cpi	r24, 0x02	; 2
     9ca:	81 f5       	brne	.+96     	; 0xa2c <__stack+0x5cd>
     9cc:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     9d0:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     9d4:	00 91 7b 02 	lds	r16, 0x027B	; 0x80027b <hanyadikKit>
     9d8:	10 e0       	ldi	r17, 0x00	; 0
     9da:	6c b1       	in	r22, 0x0c	; 12
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	8d d4       	rcall	.+2330   	; 0x12fe <__floatunsisf>
     9e4:	23 e3       	ldi	r18, 0x33	; 51
     9e6:	33 e3       	ldi	r19, 0x33	; 51
     9e8:	43 e2       	ldi	r20, 0x23	; 35
     9ea:	50 e4       	ldi	r21, 0x40	; 64
     9ec:	3e d5       	rcall	.+2684   	; 0x146a <__mulsf3>
     9ee:	a0 d5       	rcall	.+2880   	; 0x1530 <round>
     9f0:	5a d4       	rcall	.+2228   	; 0x12a6 <__fixunssfsi>
     9f2:	f8 01       	movw	r30, r16
     9f4:	e2 57       	subi	r30, 0x72	; 114
     9f6:	fd 4f       	sbci	r31, 0xFD	; 253
     9f8:	60 83       	st	Z, r22
     9fa:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     9fe:	8f 5f       	subi	r24, 0xFF	; 255
     a00:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <hanyadikKit>
     a04:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a08:	88 30       	cpi	r24, 0x08	; 8
     a0a:	49 f4       	brne	.+18     	; 0xa1e <__stack+0x5bf>
     a0c:	8c ed       	ldi	r24, 0xDC	; 220
     a0e:	15 dd       	rcall	.-1494   	; 0x43a <UARTAdatKuld>
     a10:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     a14:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <AlapFordszIrKell>
     a1e:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     a22:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     a26:	8c b1       	in	r24, 0x0c	; 12
     a28:	08 dd       	rcall	.-1520   	; 0x43a <UARTAdatKuld>
     a2a:	70 c0       	rjmp	.+224    	; 0xb0c <__stack+0x6ad>
     a2c:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <UARTStatus>
     a30:	83 30       	cpi	r24, 0x03	; 3
     a32:	09 f0       	breq	.+2      	; 0xa36 <__stack+0x5d7>
     a34:	6b c0       	rjmp	.+214    	; 0xb0c <__stack+0x6ad>
     a36:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <NemKapJelet+0x1>
     a3a:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <NemKapJelet>
     a3e:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a42:	81 11       	cpse	r24, r1
     a44:	0c c0       	rjmp	.+24     	; 0xa5e <__stack+0x5ff>
     a46:	8c b1       	in	r24, 0x0c	; 12
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <BiztHoFesz1FOGADBUFF+0x1>
     a4e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <BiztHoFesz1FOGADBUFF>
     a52:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a56:	8f 5f       	subi	r24, 0xFF	; 255
     a58:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <hanyadikKit>
     a5c:	55 c0       	rjmp	.+170    	; 0xb08 <__stack+0x6a9>
     a5e:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a62:	81 30       	cpi	r24, 0x01	; 1
     a64:	a9 f4       	brne	.+42     	; 0xa90 <__stack+0x631>
     a66:	2c b1       	in	r18, 0x0c	; 12
     a68:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <BiztHoFesz1FOGADBUFF>
     a6c:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <BiztHoFesz1FOGADBUFF+0x1>
     a70:	e0 e4       	ldi	r30, 0x40	; 64
     a72:	2e 9f       	mul	r18, r30
     a74:	90 01       	movw	r18, r0
     a76:	11 24       	eor	r1, r1
     a78:	82 2b       	or	r24, r18
     a7a:	93 2b       	or	r25, r19
     a7c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <BiztHoFesz1FOGADBUFF+0x1>
     a80:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <BiztHoFesz1FOGADBUFF>
     a84:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a88:	8f 5f       	subi	r24, 0xFF	; 255
     a8a:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <hanyadikKit>
     a8e:	3c c0       	rjmp	.+120    	; 0xb08 <__stack+0x6a9>
     a90:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	61 f4       	brne	.+24     	; 0xab0 <__stack+0x651>
     a98:	8c b1       	in	r24, 0x0c	; 12
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <BiztHoFesz2FOGADBUFF+0x1>
     aa0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <BiztHoFesz2FOGADBUFF>
     aa4:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     aa8:	8f 5f       	subi	r24, 0xFF	; 255
     aaa:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <hanyadikKit>
     aae:	2c c0       	rjmp	.+88     	; 0xb08 <__stack+0x6a9>
     ab0:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <hanyadikKit>
     ab4:	83 30       	cpi	r24, 0x03	; 3
     ab6:	41 f5       	brne	.+80     	; 0xb08 <__stack+0x6a9>
     ab8:	8c ed       	ldi	r24, 0xDC	; 220
     aba:	bf dc       	rcall	.-1666   	; 0x43a <UARTAdatKuld>
     abc:	2c b1       	in	r18, 0x0c	; 12
     abe:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <BiztHoFesz2FOGADBUFF>
     ac2:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <BiztHoFesz2FOGADBUFF+0x1>
     ac6:	f0 e4       	ldi	r31, 0x40	; 64
     ac8:	2f 9f       	mul	r18, r31
     aca:	90 01       	movw	r18, r0
     acc:	11 24       	eor	r1, r1
     ace:	82 2b       	or	r24, r18
     ad0:	93 2b       	or	r25, r19
     ad2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <BiztHoFesz2FOGADBUFF+0x1>
     ad6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <BiztHoFesz2FOGADBUFF>
     ada:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <BiztHoFesz1FOGADBUFF>
     ade:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <BiztHoFesz1FOGADBUFF+0x1>
     ae2:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <BiztHoFesz1+0x1>
     ae6:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <BiztHoFesz1>
     aea:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <BiztHoFesz2FOGADBUFF>
     aee:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <BiztHoFesz2FOGADBUFF+0x1>
     af2:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <BiztHoFesz2+0x1>
     af6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <BiztHoFesz2>
     afa:	81 e0       	ldi	r24, 0x01	; 1
     afc:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <BiztSzenzorIrKell>
     b00:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UARTStatus>
     b04:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <hanyadikKit>
     b08:	8c b1       	in	r24, 0x0c	; 12
     b0a:	97 dc       	rcall	.-1746   	; 0x43a <UARTAdatKuld>
     b0c:	28 96       	adiw	r28, 0x08	; 8
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	f8 94       	cli
     b12:	de bf       	out	0x3e, r29	; 62
     b14:	0f be       	out	0x3f, r0	; 63
     b16:	cd bf       	out	0x3d, r28	; 61
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	ff 91       	pop	r31
     b1e:	ef 91       	pop	r30
     b20:	bf 91       	pop	r27
     b22:	af 91       	pop	r26
     b24:	9f 91       	pop	r25
     b26:	8f 91       	pop	r24
     b28:	7f 91       	pop	r23
     b2a:	6f 91       	pop	r22
     b2c:	5f 91       	pop	r21
     b2e:	4f 91       	pop	r20
     b30:	3f 91       	pop	r19
     b32:	2f 91       	pop	r18
     b34:	1f 91       	pop	r17
     b36:	0f 91       	pop	r16
     b38:	ff 90       	pop	r15
     b3a:	ef 90       	pop	r14
     b3c:	df 90       	pop	r13
     b3e:	cf 90       	pop	r12
     b40:	bf 90       	pop	r11
     b42:	af 90       	pop	r10
     b44:	9f 90       	pop	r9
     b46:	8f 90       	pop	r8
     b48:	0f 90       	pop	r0
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	0f 90       	pop	r0
     b4e:	1f 90       	pop	r1
     b50:	18 95       	reti

00000b52 <twi_Kuld_kuldendo>:
}

void twi_Kuld_kuldendo(char SlaveCim, char VisszOlv)
{
	TWISlaveCim = SlaveCim;
     b52:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <TWISlaveCim>
	TWIvisszaolvasson = VisszOlv;
     b56:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <TWIvisszaolvasson>
	TWIkuldendoHossz = TWIkuldendo[0];
     b5a:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <TWIkuldendo>
     b5e:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <TWIkuldendoHossz>
	TWIkuldendoHanyadik = 0;
     b62:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <TWIkuldendoHanyadik>
//TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
//}
void twi_master_stop()
{
	// Set stop bit
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
     b66:	85 e9       	ldi	r24, 0x95	; 149
     b68:	86 bf       	out	0x36, r24	; 54
	TWISlaveCim = SlaveCim;
	TWIvisszaolvasson = VisszOlv;
	TWIkuldendoHossz = TWIkuldendo[0];
	TWIkuldendoHanyadik = 0;
	twi_master_stop();
	while(TWCR & (1<<TWINT));
     b6a:	06 b6       	in	r0, 0x36	; 54
     b6c:	07 fc       	sbrc	r0, 7
     b6e:	fd cf       	rjmp	.-6      	; 0xb6a <twi_Kuld_kuldendo+0x18>
}

#pragma region TWI kezeles
void twi_master_start(char repstart)
{
	twiRepstartolt = repstart;
     b70:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <twiRepstartolt>
	// Enable interrupt and start bits
	TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
     b74:	85 ea       	ldi	r24, 0xA5	; 165
     b76:	86 bf       	out	0x36, r24	; 54
     b78:	08 95       	ret

00000b7a <M48nakKuld>:
	}

	return crc16;
}
char M48nakKuld()
{
     b7a:	cf 93       	push	r28
     b7c:	df 93       	push	r29
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
     b82:	2a 97       	sbiw	r28, 0x0a	; 10
     b84:	0f b6       	in	r0, 0x3f	; 63
     b86:	f8 94       	cli
     b88:	de bf       	out	0x3e, r29	; 62
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	cd bf       	out	0x3d, r28	; 61
	char kd[10];
	kd[0] = TWIkuldendoHossz = 10;
     b8e:	8a e0       	ldi	r24, 0x0A	; 10
     b90:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <TWIkuldendoHossz>
     b94:	89 83       	std	Y+1, r24	; 0x01
	kd[1] = 20;//Fordszámküldés kódja
     b96:	84 e1       	ldi	r24, 0x14	; 20
     b98:	8a 83       	std	Y+2, r24	; 0x02
	WDKorok = 0;
     b9a:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>

	if(kittenyek[1] < 2)
     b9e:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <kittenyek+0x1>
     ba2:	82 30       	cpi	r24, 0x02	; 2
     ba4:	10 f4       	brcc	.+4      	; 0xbaa <M48nakKuld+0x30>
	{
		kd[2] = 0;
     ba6:	1b 82       	std	Y+3, r1	; 0x03
     ba8:	03 c0       	rjmp	.+6      	; 0xbb0 <M48nakKuld+0x36>
	}
	else kd[2] = kittenyek[1];
     baa:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <kittenyek+0x1>
     bae:	8b 83       	std	Y+3, r24	; 0x03
	if(kittenyek[2] < 2)
     bb0:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <kittenyek+0x2>
     bb4:	82 30       	cpi	r24, 0x02	; 2
     bb6:	10 f4       	brcc	.+4      	; 0xbbc <M48nakKuld+0x42>
	{
		kd[3] = 0;
     bb8:	1c 82       	std	Y+4, r1	; 0x04
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <M48nakKuld+0x48>
	}
	else kd[3] = kittenyek[2];
     bbc:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <kittenyek+0x2>
     bc0:	8c 83       	std	Y+4, r24	; 0x04
	if(kittenyek[3] < 2)
     bc2:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <kittenyek+0x3>
     bc6:	82 30       	cpi	r24, 0x02	; 2
     bc8:	10 f4       	brcc	.+4      	; 0xbce <M48nakKuld+0x54>
	{
		kd[4] = 0;
     bca:	1d 82       	std	Y+5, r1	; 0x05
     bcc:	03 c0       	rjmp	.+6      	; 0xbd4 <M48nakKuld+0x5a>
	}
	else kd[4] = kittenyek[3];
     bce:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <kittenyek+0x3>
     bd2:	8d 83       	std	Y+5, r24	; 0x05
	if(kittenyek[4] < 2)
     bd4:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <kittenyek+0x4>
     bd8:	82 30       	cpi	r24, 0x02	; 2
     bda:	10 f4       	brcc	.+4      	; 0xbe0 <M48nakKuld+0x66>
	{
		kd[5] = 0;
     bdc:	1e 82       	std	Y+6, r1	; 0x06
     bde:	03 c0       	rjmp	.+6      	; 0xbe6 <M48nakKuld+0x6c>
	}
	else kd[5] = kittenyek[4];
     be0:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <kittenyek+0x4>
     be4:	8e 83       	std	Y+6, r24	; 0x06
	if(kittenyek[5] < 2)
     be6:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <kittenyek+0x5>
     bea:	82 30       	cpi	r24, 0x02	; 2
     bec:	10 f4       	brcc	.+4      	; 0xbf2 <M48nakKuld+0x78>
	{
		kd[6] = 0;
     bee:	1f 82       	std	Y+7, r1	; 0x07
     bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <M48nakKuld+0x7e>
	}
	else kd[6] = kittenyek[5];
     bf2:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <kittenyek+0x5>
     bf6:	8f 83       	std	Y+7, r24	; 0x07
	if(kittenyek[6] < 2)
     bf8:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <kittenyek+0x6>
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	10 f4       	brcc	.+4      	; 0xc04 <M48nakKuld+0x8a>
	{
		kd[7] = 0;
     c00:	18 86       	std	Y+8, r1	; 0x08
     c02:	03 c0       	rjmp	.+6      	; 0xc0a <M48nakKuld+0x90>
	}
	else kd[7] = kittenyek[6];
     c04:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <kittenyek+0x6>
     c08:	88 87       	std	Y+8, r24	; 0x08
	
	unsigned short crc16 = Crc16Szamolo(kd, 8);
     c0a:	68 e0       	ldi	r22, 0x08	; 8
     c0c:	ce 01       	movw	r24, r28
     c0e:	01 96       	adiw	r24, 0x01	; 1
     c10:	3c db       	rcall	.-2440   	; 0x28a <Crc16Szamolo>
	kd[8] = crc16 & 0x00FF;
     c12:	89 87       	std	Y+9, r24	; 0x09
	kd[9] = (crc16 & 0xFF00)>>8;
     c14:	9a 87       	std	Y+10, r25	; 0x0a

	int i = 0;
	for(;i < TWIkuldendoHossz;++i)
     c16:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <TWIkuldendoHossz>
     c1a:	88 23       	and	r24, r24
     c1c:	81 f0       	breq	.+32     	; 0xc3e <M48nakKuld+0xc4>
     c1e:	fe 01       	movw	r30, r28
     c20:	31 96       	adiw	r30, 0x01	; 1
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	90 e0       	ldi	r25, 0x00	; 0
	{
		TWIkuldendo[i] = kd[i];
     c26:	21 91       	ld	r18, Z+
     c28:	dc 01       	movw	r26, r24
     c2a:	ae 54       	subi	r26, 0x4E	; 78
     c2c:	bd 4f       	sbci	r27, 0xFD	; 253
     c2e:	2c 93       	st	X, r18
	unsigned short crc16 = Crc16Szamolo(kd, 8);
	kd[8] = crc16 & 0x00FF;
	kd[9] = (crc16 & 0xFF00)>>8;

	int i = 0;
	for(;i < TWIkuldendoHossz;++i)
     c30:	01 96       	adiw	r24, 0x01	; 1
     c32:	20 91 81 02 	lds	r18, 0x0281	; 0x800281 <TWIkuldendoHossz>
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	82 17       	cp	r24, r18
     c3a:	93 07       	cpc	r25, r19
     c3c:	a4 f3       	brlt	.-24     	; 0xc26 <M48nakKuld+0xac>
	{
		TWIkuldendo[i] = kd[i];
	}
	
	WDKorok = 0;
     c3e:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>

	twi_Kuld_kuldendo(Mega48_TWIcim,1);
     c42:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <Mega48_TWIcim>
     c46:	61 e0       	ldi	r22, 0x01	; 1
     c48:	70 e0       	ldi	r23, 0x00	; 0
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	82 df       	rcall	.-252    	; 0xb52 <twi_Kuld_kuldendo>
	TWIM48ValaszSzamlalo = 0;
     c4e:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     c52:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <TWIM48ValaszSzamlalo>

	return 0;
}
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	2a 96       	adiw	r28, 0x0a	; 10
     c5a:	0f b6       	in	r0, 0x3f	; 63
     c5c:	f8 94       	cli
     c5e:	de bf       	out	0x3e, r29	; 62
     c60:	0f be       	out	0x3f, r0	; 63
     c62:	cd bf       	out	0x3d, r28	; 61
     c64:	df 91       	pop	r29
     c66:	cf 91       	pop	r28
     c68:	08 95       	ret

00000c6a <KittenyBeallito>:
void KittenyBeallito()
{
	char i;
	if(BiztHoFesz1 <= SZENZ1 || BiztHoFesz2 <= SZENZ2)
     c6a:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <SZENZ1>
     c6e:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <SZENZ1+0x1>
     c72:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <BiztHoFesz1>
     c76:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     c7a:	28 17       	cp	r18, r24
     c7c:	39 07       	cpc	r19, r25
     c7e:	70 f4       	brcc	.+28     	; 0xc9c <KittenyBeallito+0x32>
     c80:	20 91 72 02 	lds	r18, 0x0272	; 0x800272 <SZENZ2>
     c84:	30 91 73 02 	lds	r19, 0x0273	; 0x800273 <SZENZ2+0x1>
     c88:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <BiztHoFesz2>
     c8c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     c90:	28 17       	cp	r18, r24
     c92:	39 07       	cpc	r19, r25
     c94:	70 f0       	brcs	.+28     	; 0xcb2 <KittenyBeallito+0x48>
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <KittenyBeallito+0x36>
     c9c:	80 e0       	ldi	r24, 0x00	; 0
     c9e:	90 e0       	ldi	r25, 0x00	; 0
	{
		for (i=0; i < 8; ++i)
		{
			kittenyek[i] = 255;
     ca0:	2f ef       	ldi	r18, 0xFF	; 255
     ca2:	fc 01       	movw	r30, r24
     ca4:	eb 57       	subi	r30, 0x7B	; 123
     ca6:	fd 4f       	sbci	r31, 0xFD	; 253
     ca8:	20 83       	st	Z, r18
     caa:	01 96       	adiw	r24, 0x01	; 1
void KittenyBeallito()
{
	char i;
	if(BiztHoFesz1 <= SZENZ1 || BiztHoFesz2 <= SZENZ2)
	{
		for (i=0; i < 8; ++i)
     cac:	88 30       	cpi	r24, 0x08	; 8
     cae:	91 05       	cpc	r25, r1
     cb0:	c1 f7       	brne	.-16     	; 0xca2 <KittenyBeallito+0x38>
		{
			kittenyek[i] = 255;
		}
	}

	WDKorok = 0;
     cb2:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>

	if(kittenyek[0] < 2)
     cb6:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <kittenyek>
     cba:	82 30       	cpi	r24, 0x02	; 2
     cbc:	30 f4       	brcc	.+12     	; 0xcca <KittenyBeallito+0x60>
	{OCR1A = 0; TCCR1A &= ~(1<<COM1A1);}
     cbe:	1b bc       	out	0x2b, r1	; 43
     cc0:	1a bc       	out	0x2a, r1	; 42
     cc2:	8f b5       	in	r24, 0x2f	; 47
     cc4:	8f 77       	andi	r24, 0x7F	; 127
     cc6:	8f bd       	out	0x2f, r24	; 47
     cc8:	08 c0       	rjmp	.+16     	; 0xcda <KittenyBeallito+0x70>
	else
	{OCR1A = kittenyek[0]; TCCR1A |= (1<<COM1A1);}
     cca:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <kittenyek>
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	9b bd       	out	0x2b, r25	; 43
     cd2:	8a bd       	out	0x2a, r24	; 42
     cd4:	8f b5       	in	r24, 0x2f	; 47
     cd6:	80 68       	ori	r24, 0x80	; 128
     cd8:	8f bd       	out	0x2f, r24	; 47
	
	if(kittenyek[7] < 2)
     cda:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <kittenyek+0x7>
     cde:	82 30       	cpi	r24, 0x02	; 2
     ce0:	30 f4       	brcc	.+12     	; 0xcee <KittenyBeallito+0x84>
	{OCR1B = 0; TCCR1A &= ~(1<<COM1B1);}
     ce2:	19 bc       	out	0x29, r1	; 41
     ce4:	18 bc       	out	0x28, r1	; 40
     ce6:	8f b5       	in	r24, 0x2f	; 47
     ce8:	8f 7d       	andi	r24, 0xDF	; 223
     cea:	8f bd       	out	0x2f, r24	; 47
     cec:	08 c0       	rjmp	.+16     	; 0xcfe <KittenyBeallito+0x94>
	else
	{OCR1B = kittenyek[7]; TCCR1A |= (1<<COM1B1);}
     cee:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <kittenyek+0x7>
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	99 bd       	out	0x29, r25	; 41
     cf6:	88 bd       	out	0x28, r24	; 40
     cf8:	8f b5       	in	r24, 0x2f	; 47
     cfa:	80 62       	ori	r24, 0x20	; 32
     cfc:	8f bd       	out	0x2f, r24	; 47
	
	WDKorok = 0;
     cfe:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>

	M48nakKuld();//////////////DEBUGHOZ KIKAPCSOLVA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     d02:	3b df       	rcall	.-394    	; 0xb7a <M48nakKuld>
     d04:	08 95       	ret

00000d06 <main>:
	//Ado es Vevo aramkorok bekapcsolasa + az RX interrupt engedelyezese
	UCSRB |= (1 << RXEN) | (1 << RXCIE) | (1 << TXEN);   //
}

int main(void)
{
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	cd b7       	in	r28, 0x3d	; 61
     d0c:	de b7       	in	r29, 0x3e	; 62
	//_delay_ms(50);
	init();
     d0e:	51 da       	rcall	.-2910   	; 0x1b2 <init>
		}
		
		WDKorok = 0;
		if(TWIujbejovo)
		{
			if(TWIbejovo[0] > 1)
     d10:	0f 2e       	mov	r0, r31
     d12:	fe e9       	ldi	r31, 0x9E	; 158
     d14:	cf 2e       	mov	r12, r31
     d16:	f2 e0       	ldi	r31, 0x02	; 2
     d18:	df 2e       	mov	r13, r31
     d1a:	f0 2d       	mov	r31, r0
						{kittenyek[i] += 1;}
						else
						{kittenyek[i] = UJkittenyek[i];}
					}

					vanelteres = 1;
     d1c:	e1 2c       	mov	r14, r1
     d1e:	f1 2c       	mov	r15, r1
     d20:	99 24       	eor	r9, r9
     d22:	93 94       	inc	r9
					case 17://Helyes CRC
					{
						i2CHibaM48RESETSzamlalo = 0;
						i2CHibaTELJESRESETSzamlalo = 0;

						TWIM48ValaszSzamlalo = 31111;
     d24:	0f 2e       	mov	r0, r31
     d26:	f7 e8       	ldi	r31, 0x87	; 135
     d28:	af 2e       	mov	r10, r31
     d2a:	f9 e7       	ldi	r31, 0x79	; 121
     d2c:	bf 2e       	mov	r11, r31
     d2e:	f0 2d       	mov	r31, r0
	//_delay_ms(50);
	//}

	while(1)
	{
		WDKorok = 0;
     d30:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(KittenyKesz == 1)
     d34:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <KittenyKesz>
     d38:	81 30       	cpi	r24, 0x01	; 1
     d3a:	09 f0       	breq	.+2      	; 0xd3e <main+0x38>
     d3c:	86 c1       	rjmp	.+780    	; 0x104a <main+0x344>
		{
			KittenyBeallito();
     d3e:	95 df       	rcall	.-214    	; 0xc6a <KittenyBeallito>
			KittenyKesz = 0;
     d40:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <KittenyKesz>
     d44:	82 c1       	rjmp	.+772    	; 0x104a <main+0x344>
		}
		
		WDKorok = 0;
		if(FinomFordszValtasKell)
     d46:	97 01       	movw	r18, r14
     d48:	40 e0       	ldi	r20, 0x00	; 0
		{
			char vanelteres = 0;
			int i;
			for (i=0;i<8;++i)
			{
				if(kittenyek[i] != UJkittenyek[i])
     d4a:	f9 01       	movw	r30, r18
     d4c:	eb 57       	subi	r30, 0x7B	; 123
     d4e:	fd 4f       	sbci	r31, 0xFD	; 253
     d50:	90 81       	ld	r25, Z
     d52:	f9 01       	movw	r30, r18
     d54:	ea 56       	subi	r30, 0x6A	; 106
     d56:	fd 4f       	sbci	r31, 0xFD	; 253
     d58:	80 81       	ld	r24, Z
     d5a:	98 17       	cp	r25, r24
     d5c:	09 f4       	brne	.+2      	; 0xd60 <main+0x5a>
     d5e:	48 c0       	rjmp	.+144    	; 0xdf0 <main+0xea>
				{
					if(kittenyek[i] > UJkittenyek[i])
     d60:	f9 01       	movw	r30, r18
     d62:	eb 57       	subi	r30, 0x7B	; 123
     d64:	fd 4f       	sbci	r31, 0xFD	; 253
     d66:	90 81       	ld	r25, Z
     d68:	f9 01       	movw	r30, r18
     d6a:	ea 56       	subi	r30, 0x6A	; 106
     d6c:	fd 4f       	sbci	r31, 0xFD	; 253
     d6e:	80 81       	ld	r24, Z
     d70:	89 17       	cp	r24, r25
     d72:	f8 f4       	brcc	.+62     	; 0xdb2 <main+0xac>
					{
						if(kittenyek[i] - UJkittenyek[i] >= 2 )
     d74:	f9 01       	movw	r30, r18
     d76:	eb 57       	subi	r30, 0x7B	; 123
     d78:	fd 4f       	sbci	r31, 0xFD	; 253
     d7a:	80 81       	ld	r24, Z
     d7c:	f9 01       	movw	r30, r18
     d7e:	ea 56       	subi	r30, 0x6A	; 106
     d80:	fd 4f       	sbci	r31, 0xFD	; 253
     d82:	40 81       	ld	r20, Z
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	84 1b       	sub	r24, r20
     d88:	91 09       	sbc	r25, r1
     d8a:	02 97       	sbiw	r24, 0x02	; 2
     d8c:	44 f0       	brlt	.+16     	; 0xd9e <main+0x98>
						{kittenyek[i] -= 2;}
     d8e:	f9 01       	movw	r30, r18
     d90:	eb 57       	subi	r30, 0x7B	; 123
     d92:	fd 4f       	sbci	r31, 0xFD	; 253
     d94:	80 81       	ld	r24, Z
     d96:	82 50       	subi	r24, 0x02	; 2
     d98:	80 83       	st	Z, r24
						{kittenyek[i] += 1;}
						else
						{kittenyek[i] = UJkittenyek[i];}
					}

					vanelteres = 1;
     d9a:	49 2d       	mov	r20, r9
     d9c:	29 c0       	rjmp	.+82     	; 0xdf0 <main+0xea>
					if(kittenyek[i] > UJkittenyek[i])
					{
						if(kittenyek[i] - UJkittenyek[i] >= 2 )
						{kittenyek[i] -= 2;}
						else
						{kittenyek[i] = UJkittenyek[i];}
     d9e:	f9 01       	movw	r30, r18
     da0:	ea 56       	subi	r30, 0x6A	; 106
     da2:	fd 4f       	sbci	r31, 0xFD	; 253
     da4:	80 81       	ld	r24, Z
     da6:	f9 01       	movw	r30, r18
     da8:	eb 57       	subi	r30, 0x7B	; 123
     daa:	fd 4f       	sbci	r31, 0xFD	; 253
     dac:	80 83       	st	Z, r24
						{kittenyek[i] += 1;}
						else
						{kittenyek[i] = UJkittenyek[i];}
					}

					vanelteres = 1;
     dae:	49 2d       	mov	r20, r9
     db0:	1f c0       	rjmp	.+62     	; 0xdf0 <main+0xea>
						else
						{kittenyek[i] = UJkittenyek[i];}
					}
					else
					{
						if(UJkittenyek[i] - kittenyek[i] >= 1 )
     db2:	f9 01       	movw	r30, r18
     db4:	ea 56       	subi	r30, 0x6A	; 106
     db6:	fd 4f       	sbci	r31, 0xFD	; 253
     db8:	80 81       	ld	r24, Z
     dba:	f9 01       	movw	r30, r18
     dbc:	eb 57       	subi	r30, 0x7B	; 123
     dbe:	fd 4f       	sbci	r31, 0xFD	; 253
     dc0:	40 81       	ld	r20, Z
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	84 1b       	sub	r24, r20
     dc6:	91 09       	sbc	r25, r1
     dc8:	18 16       	cp	r1, r24
     dca:	19 06       	cpc	r1, r25
     dcc:	44 f4       	brge	.+16     	; 0xdde <main+0xd8>
						{kittenyek[i] += 1;}
     dce:	f9 01       	movw	r30, r18
     dd0:	eb 57       	subi	r30, 0x7B	; 123
     dd2:	fd 4f       	sbci	r31, 0xFD	; 253
     dd4:	80 81       	ld	r24, Z
     dd6:	8f 5f       	subi	r24, 0xFF	; 255
     dd8:	80 83       	st	Z, r24
						else
						{kittenyek[i] = UJkittenyek[i];}
					}

					vanelteres = 1;
     dda:	49 2d       	mov	r20, r9
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <main+0xea>
					else
					{
						if(UJkittenyek[i] - kittenyek[i] >= 1 )
						{kittenyek[i] += 1;}
						else
						{kittenyek[i] = UJkittenyek[i];}
     dde:	f9 01       	movw	r30, r18
     de0:	ea 56       	subi	r30, 0x6A	; 106
     de2:	fd 4f       	sbci	r31, 0xFD	; 253
     de4:	80 81       	ld	r24, Z
     de6:	f9 01       	movw	r30, r18
     de8:	eb 57       	subi	r30, 0x7B	; 123
     dea:	fd 4f       	sbci	r31, 0xFD	; 253
     dec:	80 83       	st	Z, r24
					}

					vanelteres = 1;
     dee:	49 2d       	mov	r20, r9
		WDKorok = 0;
		if(FinomFordszValtasKell)
		{
			char vanelteres = 0;
			int i;
			for (i=0;i<8;++i)
     df0:	2f 5f       	subi	r18, 0xFF	; 255
     df2:	3f 4f       	sbci	r19, 0xFF	; 255
     df4:	28 30       	cpi	r18, 0x08	; 8
     df6:	31 05       	cpc	r19, r1
     df8:	09 f0       	breq	.+2      	; 0xdfc <main+0xf6>
     dfa:	a7 cf       	rjmp	.-178    	; 0xd4a <main+0x44>
					}

					vanelteres = 1;
				}
			}
			if(vanelteres)
     dfc:	41 11       	cpse	r20, r1
			{
				KittenyKesz = 1;
     dfe:	90 92 76 02 	sts	0x0276, r9	; 0x800276 <KittenyKesz>
			}
			FinomFordszValtasKell = 0;
     e02:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <FinomFordszValtasKell>
		}
		
		WDKorok = 0;
     e06:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(AlapFordszIrKell)
     e0a:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <AlapFordszIrKell>
     e0e:	81 11       	cpse	r24, r1
     e10:	07 c0       	rjmp	.+14     	; 0xe20 <main+0x11a>
     e12:	1e c0       	rjmp	.+60     	; 0xe50 <main+0x14a>
				KittenyKesz = 1;
			}
			FinomFordszValtasKell = 0;
		}
		
		WDKorok = 0;
     e14:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(AlapFordszIrKell)
     e18:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <AlapFordszIrKell>
     e1c:	88 23       	and	r24, r24
     e1e:	c1 f0       	breq	.+48     	; 0xe50 <main+0x14a>
						{kittenyek[i] += 1;}
						else
						{kittenyek[i] = UJkittenyek[i];}
					}

					vanelteres = 1;
     e20:	87 01       	movw	r16, r14
		if(AlapFordszIrKell)
		{
			char i;
			for (i=0; i < 8; ++i)
			{
				if(AlapKittenyek[i] <2)
     e22:	f8 01       	movw	r30, r16
     e24:	e2 57       	subi	r30, 0x72	; 114
     e26:	fd 4f       	sbci	r31, 0xFD	; 253
     e28:	80 81       	ld	r24, Z
     e2a:	82 30       	cpi	r24, 0x02	; 2
     e2c:	20 f4       	brcc	.+8      	; 0xe36 <main+0x130>
				EEPROMIrBizt(i,0);
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	c8 01       	movw	r24, r16
     e32:	91 d9       	rcall	.-3294   	; 0x156 <EEPROMIrBizt>
     e34:	06 c0       	rjmp	.+12     	; 0xe42 <main+0x13c>
				else
				EEPROMIrBizt(i,AlapKittenyek[i]);
     e36:	f8 01       	movw	r30, r16
     e38:	e2 57       	subi	r30, 0x72	; 114
     e3a:	fd 4f       	sbci	r31, 0xFD	; 253
     e3c:	60 81       	ld	r22, Z
     e3e:	c8 01       	movw	r24, r16
     e40:	8a d9       	rcall	.-3308   	; 0x156 <EEPROMIrBizt>
     e42:	0f 5f       	subi	r16, 0xFF	; 255
     e44:	1f 4f       	sbci	r17, 0xFF	; 255
		
		WDKorok = 0;
		if(AlapFordszIrKell)
		{
			char i;
			for (i=0; i < 8; ++i)
     e46:	08 30       	cpi	r16, 0x08	; 8
     e48:	11 05       	cpc	r17, r1
     e4a:	59 f7       	brne	.-42     	; 0xe22 <main+0x11c>
				if(AlapKittenyek[i] <2)
				EEPROMIrBizt(i,0);
				else
				EEPROMIrBizt(i,AlapKittenyek[i]);
			}
			AlapFordszIrKell = 0;
     e4c:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <AlapFordszIrKell>
		}
		
		WDKorok = 0;
     e50:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(BiztSzenzorIrKell)
     e54:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <BiztSzenzorIrKell>
     e58:	88 23       	and	r24, r24
     e5a:	a1 f1       	breq	.+104    	; 0xec4 <main+0x1be>
		{
			EEPROMIrBizt(24, BiztHoFesz1 & 0b00000000011111);
     e5c:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <BiztHoFesz1>
     e60:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     e64:	6f 71       	andi	r22, 0x1F	; 31
     e66:	88 e1       	ldi	r24, 0x18	; 24
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	75 d9       	rcall	.-3350   	; 0x156 <EEPROMIrBizt>
			EEPROMIrBizt(25,(BiztHoFesz1 & 0b00001111100000)>>5);
     e6c:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <BiztHoFesz1>
     e70:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     e74:	60 7e       	andi	r22, 0xE0	; 224
     e76:	73 70       	andi	r23, 0x03	; 3
     e78:	76 95       	lsr	r23
     e7a:	67 95       	ror	r22
     e7c:	72 95       	swap	r23
     e7e:	62 95       	swap	r22
     e80:	6f 70       	andi	r22, 0x0F	; 15
     e82:	67 27       	eor	r22, r23
     e84:	7f 70       	andi	r23, 0x0F	; 15
     e86:	67 27       	eor	r22, r23
     e88:	89 e1       	ldi	r24, 0x19	; 25
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	64 d9       	rcall	.-3384   	; 0x156 <EEPROMIrBizt>
			EEPROMIrBizt(26, BiztHoFesz2 & 0b00000000011111);
     e8e:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <BiztHoFesz2>
     e92:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     e96:	6f 71       	andi	r22, 0x1F	; 31
     e98:	8a e1       	ldi	r24, 0x1A	; 26
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	5c d9       	rcall	.-3400   	; 0x156 <EEPROMIrBizt>
			EEPROMIrBizt(27,(BiztHoFesz2 & 0b00001111100000)>>5);
     e9e:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <BiztHoFesz2>
     ea2:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     ea6:	60 7e       	andi	r22, 0xE0	; 224
     ea8:	73 70       	andi	r23, 0x03	; 3
     eaa:	76 95       	lsr	r23
     eac:	67 95       	ror	r22
     eae:	72 95       	swap	r23
     eb0:	62 95       	swap	r22
     eb2:	6f 70       	andi	r22, 0x0F	; 15
     eb4:	67 27       	eor	r22, r23
     eb6:	7f 70       	andi	r23, 0x0F	; 15
     eb8:	67 27       	eor	r22, r23
     eba:	8b e1       	ldi	r24, 0x1B	; 27
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	4b d9       	rcall	.-3434   	; 0x156 <EEPROMIrBizt>
			BiztSzenzorIrKell = 0;
     ec0:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <BiztSzenzorIrKell>
		}
		
		WDKorok = 0;
     ec4:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(BiztHofEllenorzSzamlalo > 65)
     ec8:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <BiztHofEllenorzSzamlalo>
     ecc:	82 34       	cpi	r24, 0x42	; 66
     ece:	e8 f1       	brcs	.+122    	; 0xf4a <main+0x244>
		{
			BiztHofEllenorzSzamlalo = 0;
     ed0:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <BiztHofEllenorzSzamlalo>

			short beolvasott;

			beolvasott = Beolvas10bitADC(0);
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	54 d9       	rcall	.-3416   	; 0x180 <Beolvas10bitADC>
			if(beolvasott < 904)
     ed8:	88 38       	cpi	r24, 0x88	; 136
     eda:	23 e0       	ldi	r18, 0x03	; 3
     edc:	92 07       	cpc	r25, r18
     ede:	2c f4       	brge	.+10     	; 0xeea <main+0x1e4>
			SZENZ1=beolvasott;//23.89795-22.75286*log((((double)5/(((double)5/(double)256)*beolvasott))-1)-0.00851);
     ee0:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <SZENZ1+0x1>
     ee4:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <SZENZ1>
     ee8:	04 c0       	rjmp	.+8      	; 0xef2 <main+0x1ec>
			else
			SZENZ1 = 0;
     eea:	f0 92 75 02 	sts	0x0275, r15	; 0x800275 <SZENZ1+0x1>
     eee:	e0 92 74 02 	sts	0x0274, r14	; 0x800274 <SZENZ1>

			beolvasott = Beolvas10bitADC(1);
     ef2:	89 2d       	mov	r24, r9
     ef4:	45 d9       	rcall	.-3446   	; 0x180 <Beolvas10bitADC>
			if(beolvasott < 904)
     ef6:	88 38       	cpi	r24, 0x88	; 136
     ef8:	e3 e0       	ldi	r30, 0x03	; 3
     efa:	9e 07       	cpc	r25, r30
     efc:	2c f4       	brge	.+10     	; 0xf08 <main+0x202>
			SZENZ2=beolvasott;//23.89795-22.75286*log((((double)5/(((double)5/(double)256)*beolvasott))-1)-0.00851);
     efe:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <SZENZ2+0x1>
     f02:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <SZENZ2>
     f06:	04 c0       	rjmp	.+8      	; 0xf10 <main+0x20a>
			else
			SZENZ2 = 0;
     f08:	f0 92 73 02 	sts	0x0273, r15	; 0x800273 <SZENZ2+0x1>
     f0c:	e0 92 72 02 	sts	0x0272, r14	; 0x800272 <SZENZ2>
			
			
			if(BiztHoFesz1 <= SZENZ1 || BiztHoFesz2 <= SZENZ2)
     f10:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <SZENZ1>
     f14:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <SZENZ1+0x1>
     f18:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <BiztHoFesz1>
     f1c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <BiztHoFesz1+0x1>
     f20:	28 17       	cp	r18, r24
     f22:	39 07       	cpc	r19, r25
     f24:	58 f4       	brcc	.+22     	; 0xf3c <main+0x236>
     f26:	20 91 72 02 	lds	r18, 0x0272	; 0x800272 <SZENZ2>
     f2a:	30 91 73 02 	lds	r19, 0x0273	; 0x800273 <SZENZ2+0x1>
     f2e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <BiztHoFesz2>
     f32:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <BiztHoFesz2+0x1>
     f36:	28 17       	cp	r18, r24
     f38:	39 07       	cpc	r19, r25
     f3a:	28 f0       	brcs	.+10     	; 0xf46 <main+0x240>
			{
				KittenyKesz = 1;
     f3c:	90 92 76 02 	sts	0x0276, r9	; 0x800276 <KittenyKesz>
				BuzzerKell = 1;
     f40:	90 92 6c 02 	sts	0x026C, r9	; 0x80026c <__data_end>
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <main+0x244>
			}
			else
			{
				BuzzerKell = 0;
     f46:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <__data_end>
			}
		}
		
		WDKorok = 0;
     f4a:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(TWIM48ValaszSzamlalo != 31111 && TWIM48ValaszSzamlalo >= TWIM48ValaszSzamlaloMaxertek)
     f4e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <TWIM48ValaszSzamlalo>
     f52:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     f56:	87 38       	cpi	r24, 0x87	; 135
     f58:	99 47       	sbci	r25, 0x79	; 121
     f5a:	e1 f0       	breq	.+56     	; 0xf94 <main+0x28e>
     f5c:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <TWIM48ValaszSzamlalo>
     f60:	70 91 6a 00 	lds	r23, 0x006A	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
     f64:	07 2e       	mov	r0, r23
     f66:	00 0c       	add	r0, r0
     f68:	88 0b       	sbc	r24, r24
     f6a:	99 0b       	sbc	r25, r25
     f6c:	ca d1       	rcall	.+916    	; 0x1302 <__floatsisf>
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e8       	ldi	r19, 0x80	; 128
     f72:	42 e0       	ldi	r20, 0x02	; 2
     f74:	51 e4       	ldi	r21, 0x41	; 65
     f76:	75 d2       	rcall	.+1258   	; 0x1462 <__gesf2>
     f78:	88 23       	and	r24, r24
     f7a:	64 f0       	brlt	.+24     	; 0xf94 <main+0x28e>
		{
			KittenyKesz = 1;
     f7c:	90 92 76 02 	sts	0x0276, r9	; 0x800276 <KittenyKesz>
			
			++i2CHibaM48RESETSzamlalo;
     f80:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <i2CHibaM48RESETSzamlalo>
     f84:	8f 5f       	subi	r24, 0xFF	; 255
     f86:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <i2CHibaM48RESETSzamlalo>
			++i2CHibaTELJESRESETSzamlalo;
     f8a:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <i2CHibaTELJESRESETSzamlalo>
     f8e:	8f 5f       	subi	r24, 0xFF	; 255
     f90:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <i2CHibaTELJESRESETSzamlalo>
		}
		
		WDKorok = 0;
     f94:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(TWIujbejovo)
     f98:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <TWIujbejovo>
     f9c:	88 23       	and	r24, r24
     f9e:	09 f4       	brne	.+2      	; 0xfa2 <main+0x29c>
     fa0:	46 c0       	rjmp	.+140    	; 0x102e <main+0x328>
		{
			if(TWIbejovo[0] > 1)
     fa2:	f6 01       	movw	r30, r12
     fa4:	80 81       	ld	r24, Z
     fa6:	82 30       	cpi	r24, 0x02	; 2
     fa8:	08 f4       	brcc	.+2      	; 0xfac <main+0x2a6>
     faa:	3f c0       	rjmp	.+126    	; 0x102a <main+0x324>
     fac:	6d b7       	in	r22, 0x3d	; 61
     fae:	7e b7       	in	r23, 0x3e	; 62
			{
				char behossz = TWIbejovoHossz;
     fb0:	40 91 7f 02 	lds	r20, 0x027F	; 0x80027f <TWIbejovoHossz>
				char beuzenet[behossz];
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	8d b7       	in	r24, 0x3d	; 61
     fb8:	9e b7       	in	r25, 0x3e	; 62
     fba:	84 1b       	sub	r24, r20
     fbc:	95 0b       	sbc	r25, r21
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	f8 94       	cli
     fc2:	9e bf       	out	0x3e, r25	; 62
     fc4:	0f be       	out	0x3f, r0	; 63
     fc6:	8d bf       	out	0x3d, r24	; 61
     fc8:	0d b7       	in	r16, 0x3d	; 61
     fca:	1e b7       	in	r17, 0x3e	; 62
     fcc:	0f 5f       	subi	r16, 0xFF	; 255
     fce:	1f 4f       	sbci	r17, 0xFF	; 255
				int i = 0;
				for(; i < behossz; ++i)
     fd0:	14 16       	cp	r1, r20
     fd2:	15 06       	cpc	r1, r21
     fd4:	64 f4       	brge	.+24     	; 0xfee <main+0x2e8>
     fd6:	f8 01       	movw	r30, r16
     fd8:	97 01       	movw	r18, r14
				{
					beuzenet[i] = TWIbejovo[i];
     fda:	d9 01       	movw	r26, r18
     fdc:	a2 56       	subi	r26, 0x62	; 98
     fde:	bd 4f       	sbci	r27, 0xFD	; 253
     fe0:	9c 91       	ld	r25, X
     fe2:	91 93       	st	Z+, r25
			if(TWIbejovo[0] > 1)
			{
				char behossz = TWIbejovoHossz;
				char beuzenet[behossz];
				int i = 0;
				for(; i < behossz; ++i)
     fe4:	2f 5f       	subi	r18, 0xFF	; 255
     fe6:	3f 4f       	sbci	r19, 0xFF	; 255
     fe8:	24 17       	cp	r18, r20
     fea:	35 07       	cpc	r19, r21
     fec:	b1 f7       	brne	.-20     	; 0xfda <main+0x2d4>
				{
					beuzenet[i] = TWIbejovo[i];
				}
				switch(beuzenet[1])
     fee:	f8 01       	movw	r30, r16
     ff0:	81 81       	ldd	r24, Z+1	; 0x01
     ff2:	81 31       	cpi	r24, 0x11	; 17
     ff4:	49 f4       	brne	.+18     	; 0x1008 <main+0x302>
				{
					case 17://Helyes CRC
					{
						i2CHibaM48RESETSzamlalo = 0;
     ff6:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <i2CHibaM48RESETSzamlalo>
						i2CHibaTELJESRESETSzamlalo = 0;
     ffa:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <i2CHibaTELJESRESETSzamlalo>

						TWIM48ValaszSzamlalo = 31111;
     ffe:	b0 92 6a 00 	sts	0x006A, r11	; 0x80006a <TWIM48ValaszSzamlalo+0x1>
    1002:	a0 92 69 00 	sts	0x0069, r10	; 0x800069 <TWIM48ValaszSzamlalo>
						break;
    1006:	0c c0       	rjmp	.+24     	; 0x1020 <main+0x31a>
					}
					default://Helytelen CRC
					{
						++i2CHibaM48RESETSzamlalo;
    1008:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <i2CHibaM48RESETSzamlalo>
    100c:	8f 5f       	subi	r24, 0xFF	; 255
    100e:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <i2CHibaM48RESETSzamlalo>
						++i2CHibaTELJESRESETSzamlalo;
    1012:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <i2CHibaTELJESRESETSzamlalo>
    1016:	8f 5f       	subi	r24, 0xFF	; 255
    1018:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <i2CHibaTELJESRESETSzamlalo>

						KittenyKesz = 1;
    101c:	90 92 76 02 	sts	0x0276, r9	; 0x800276 <KittenyKesz>
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	7e bf       	out	0x3e, r23	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	6d bf       	out	0x3d, r22	; 61
						break;
					}
				}
			}
			TWIujbejovo = 0;
    102a:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <TWIujbejovo>
		}
		
		if(i2CHibaM48RESETSzamlalo >= i2CHibaM48RESETSzamlaloMaxertek)
    102e:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <i2CHibaM48RESETSzamlalo>
    1032:	84 30       	cpi	r24, 0x04	; 4
    1034:	18 f0       	brcs	.+6      	; 0x103c <main+0x336>
		{
			RESET_M48();
    1036:	47 d9       	rcall	.-3442   	; 0x2c6 <RESET_M48>
			i2CHibaM48RESETSzamlalo = 0;
    1038:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <i2CHibaM48RESETSzamlalo>
		}
		if(i2CHibaTELJESRESETSzamlalo >= i2CHibaTELJESRESETSzamlaloMaxertek)
    103c:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <i2CHibaTELJESRESETSzamlalo>
    1040:	8a 30       	cpi	r24, 0x0A	; 10
    1042:	08 f4       	brcc	.+2      	; 0x1046 <main+0x340>
    1044:	75 ce       	rjmp	.-790    	; 0xd30 <main+0x2a>
		{
			RESET();
    1046:	48 d9       	rcall	.-3440   	; 0x2d8 <RESET>
    1048:	73 ce       	rjmp	.-794    	; 0xd30 <main+0x2a>
		{
			KittenyBeallito();
			KittenyKesz = 0;
		}
		
		WDKorok = 0;
    104a:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <WDKorok>
		if(FinomFordszValtasKell)
    104e:	80 91 71 02 	lds	r24, 0x0271	; 0x800271 <FinomFordszValtasKell>
    1052:	81 11       	cpse	r24, r1
    1054:	78 ce       	rjmp	.-784    	; 0xd46 <main+0x40>
    1056:	de ce       	rjmp	.-580    	; 0xe14 <main+0x10e>

00001058 <__vector_17>:
	twi_master_stop();
	while(TWCR & (1<<TWINT));
	twi_master_start(0);
}
ISR(TWI_vect)
{
    1058:	1f 92       	push	r1
    105a:	0f 92       	push	r0
    105c:	0f b6       	in	r0, 0x3f	; 63
    105e:	0f 92       	push	r0
    1060:	11 24       	eor	r1, r1
    1062:	8f 93       	push	r24
    1064:	9f 93       	push	r25
    1066:	af 93       	push	r26
    1068:	bf 93       	push	r27
    106a:	ef 93       	push	r30
    106c:	ff 93       	push	r31
	//UARTAdatKuld(TWSR & 0b11111000); UARTAdatKuld(TWSR & 0b11111000); UARTAdatKuld(TWSR & 0b11111000);
	//UARTAdatKuld(TWDR);
	switch (TWSR & 0b11111000)
    106e:	81 b1       	in	r24, 0x01	; 1
    1070:	e8 2f       	mov	r30, r24
    1072:	e8 7f       	andi	r30, 0xF8	; 248
    1074:	8e 2f       	mov	r24, r30
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	fc 01       	movw	r30, r24
    107a:	38 97       	sbiw	r30, 0x08	; 8
    107c:	e9 34       	cpi	r30, 0x49	; 73
    107e:	f1 05       	cpc	r31, r1
    1080:	08 f0       	brcs	.+2      	; 0x1084 <__vector_17+0x2c>
    1082:	97 c0       	rjmp	.+302    	; 0x11b2 <__vector_17+0x15a>
    1084:	ea 5d       	subi	r30, 0xDA	; 218
    1086:	ff 4f       	sbci	r31, 0xFF	; 255
    1088:	09 94       	ijmp
	{
		//////////////////////MASTER TRANSMITTER///////////////////////
		case 0x08://A START condition transmitted
		case 0x10://A repeated START condition transmitted
		{
			if(twiRepstartolt == 0)
    108a:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <twiRepstartolt>
    108e:	81 11       	cpse	r24, r1
    1090:	06 c0       	rjmp	.+12     	; 0x109e <__vector_17+0x46>
			{
				TWDR = TWISlaveCim + TWI_IR;
    1092:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <TWISlaveCim>
    1096:	83 b9       	out	0x03, r24	; 3
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
}

void twi_setAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
    1098:	85 ec       	ldi	r24, 0xC5	; 197
    109a:	86 bf       	out	0x36, r24	; 54
    109c:	8a c0       	rjmp	.+276    	; 0x11b2 <__vector_17+0x15a>
				TWDR = TWISlaveCim + TWI_IR;
				twi_setAck();
			}
			else
			{
				if(TWIvisszaolvasson)
    109e:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <TWIvisszaolvasson>
    10a2:	88 23       	and	r24, r24
    10a4:	09 f4       	brne	.+2      	; 0x10a8 <__vector_17+0x50>
    10a6:	85 c0       	rjmp	.+266    	; 0x11b2 <__vector_17+0x15a>
				{
					TWDR = TWISlaveCim + TWI_OLVAS;
    10a8:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <TWISlaveCim>
    10ac:	8f 5f       	subi	r24, 0xFF	; 255
    10ae:	83 b9       	out	0x03, r24	; 3
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
}

void twi_setAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
    10b0:	85 ec       	ldi	r24, 0xC5	; 197
    10b2:	86 bf       	out	0x36, r24	; 54
    10b4:	7e c0       	rjmp	.+252    	; 0x11b2 <__vector_17+0x15a>
			}
			break;
		}
		case 0x18://SLA+W transmitted; ACK received
		{
			if(TWIkuldendoHanyadik >= TWIkuldendoHossz)
    10b6:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    10ba:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <TWIkuldendoHossz>
    10be:	98 17       	cp	r25, r24
    10c0:	60 f0       	brcs	.+24     	; 0x10da <__vector_17+0x82>
			{
				if(TWIvisszaolvasson)
    10c2:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <TWIvisszaolvasson>
    10c6:	88 23       	and	r24, r24
    10c8:	29 f0       	breq	.+10     	; 0x10d4 <__vector_17+0x7c>
}

#pragma region TWI kezeles
void twi_master_start(char repstart)
{
	twiRepstartolt = repstart;
    10ca:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <twiRepstartolt>
	// Enable interrupt and start bits
	TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
    10ce:	85 ea       	ldi	r24, 0xA5	; 165
    10d0:	86 bf       	out	0x36, r24	; 54
    10d2:	6f c0       	rjmp	.+222    	; 0x11b2 <__vector_17+0x15a>
//TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
//}
void twi_master_stop()
{
	// Set stop bit
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
    10d4:	85 e9       	ldi	r24, 0x95	; 149
    10d6:	86 bf       	out	0x36, r24	; 54
    10d8:	6c c0       	rjmp	.+216    	; 0x11b2 <__vector_17+0x15a>
					twi_master_stop();
				}
			}
			else
			{
				TWDR = TWIkuldendo[TWIkuldendoHanyadik];
    10da:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	ee 54       	subi	r30, 0x4E	; 78
    10e2:	fd 4f       	sbci	r31, 0xFD	; 253
    10e4:	80 81       	ld	r24, Z
    10e6:	83 b9       	out	0x03, r24	; 3
				++TWIkuldendoHanyadik;
    10e8:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    10ec:	8f 5f       	subi	r24, 0xFF	; 255
    10ee:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <TWIkuldendoHanyadik>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
}

void twi_setAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
    10f2:	85 ec       	ldi	r24, 0xC5	; 197
    10f4:	86 bf       	out	0x36, r24	; 54
    10f6:	5d c0       	rjmp	.+186    	; 0x11b2 <__vector_17+0x15a>
//TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
//}
void twi_master_stop()
{
	// Set stop bit
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
    10f8:	85 e9       	ldi	r24, 0x95	; 149
    10fa:	86 bf       	out	0x36, r24	; 54
    10fc:	5a c0       	rjmp	.+180    	; 0x11b2 <__vector_17+0x15a>
			twi_master_stop();
			break;
		}
		case 0x28://Data byte transmitted; ACK received
		{
			if(TWIkuldendoHanyadik < TWIkuldendoHossz)
    10fe:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    1102:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <TWIkuldendoHossz>
    1106:	98 17       	cp	r25, r24
    1108:	38 f4       	brcc	.+14     	; 0x1118 <__vector_17+0xc0>
			{
				TWDR = TWIkuldendo[TWIkuldendoHanyadik];
    110a:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    110e:	f0 e0       	ldi	r31, 0x00	; 0
    1110:	ee 54       	subi	r30, 0x4E	; 78
    1112:	fd 4f       	sbci	r31, 0xFD	; 253
    1114:	80 81       	ld	r24, Z
    1116:	83 b9       	out	0x03, r24	; 3
			}
			++TWIkuldendoHanyadik;
    1118:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    111c:	8f 5f       	subi	r24, 0xFF	; 255
    111e:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <TWIkuldendoHanyadik>

			if(TWIkuldendoHanyadik > TWIkuldendoHossz)
    1122:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <TWIkuldendoHanyadik>
    1126:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <TWIkuldendoHossz>
    112a:	89 17       	cp	r24, r25
    112c:	08 f0       	brcs	.+2      	; 0x1130 <__vector_17+0xd8>
    112e:	41 c0       	rjmp	.+130    	; 0x11b2 <__vector_17+0x15a>
			{
				if(TWIvisszaolvasson)
    1130:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <TWIvisszaolvasson>
    1134:	88 23       	and	r24, r24
    1136:	31 f0       	breq	.+12     	; 0x1144 <__vector_17+0xec>
}

#pragma region TWI kezeles
void twi_master_start(char repstart)
{
	twiRepstartolt = repstart;
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <twiRepstartolt>
	// Enable interrupt and start bits
	TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
    113e:	85 ea       	ldi	r24, 0xA5	; 165
    1140:	86 bf       	out	0x36, r24	; 54
    1142:	37 c0       	rjmp	.+110    	; 0x11b2 <__vector_17+0x15a>
//TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
//}
void twi_master_stop()
{
	// Set stop bit
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
    1144:	85 e9       	ldi	r24, 0x95	; 149
    1146:	86 bf       	out	0x36, r24	; 54
    1148:	34 c0       	rjmp	.+104    	; 0x11b2 <__vector_17+0x15a>
		//break;
		//}
		//////////////////////MASTER RECEIVER///////////////////////
		case 0x40://SLA+R transmitted; ACK received
		{
			TWIbejovoHanyadik = 0;
    114a:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <TWIbejovoHanyadik>
			TWIujbejovo = 0;
    114e:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <TWIujbejovo>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
}

void twi_setAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
    1152:	85 ec       	ldi	r24, 0xC5	; 197
    1154:	86 bf       	out	0x36, r24	; 54
    1156:	2d c0       	rjmp	.+90     	; 0x11b2 <__vector_17+0x15a>
		//{//Kikommentezve, mert nem fér a FLASH-be
		//break;
		//}
		case 0x50://Data byte received; ACK returned
		{
			if(TWIbejovoHanyadik == 0)
    1158:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <TWIbejovoHanyadik>
    115c:	81 11       	cpse	r24, r1
    115e:	0a c0       	rjmp	.+20     	; 0x1174 <__vector_17+0x11c>
			{
				if(TWDR != 255)
    1160:	83 b1       	in	r24, 0x03	; 3
    1162:	8f 3f       	cpi	r24, 0xFF	; 255
    1164:	21 f0       	breq	.+8      	; 0x116e <__vector_17+0x116>
				TWIbejovoHossz = TWDR;
    1166:	83 b1       	in	r24, 0x03	; 3
    1168:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <TWIbejovoHossz>
    116c:	03 c0       	rjmp	.+6      	; 0x1174 <__vector_17+0x11c>
				else
				TWIbejovoHossz = 1;
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <TWIbejovoHossz>
			}

			if(TWIbejovoHanyadik < TWIbejovoHossz)
    1174:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <TWIbejovoHanyadik>
    1178:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <TWIbejovoHossz>
    117c:	98 17       	cp	r25, r24
    117e:	48 f4       	brcc	.+18     	; 0x1192 <__vector_17+0x13a>
			{
				TWIbejovo[TWIbejovoHanyadik] = TWDR;
    1180:	e0 91 7e 02 	lds	r30, 0x027E	; 0x80027e <TWIbejovoHanyadik>
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	83 b1       	in	r24, 0x03	; 3
    1188:	e2 56       	subi	r30, 0x62	; 98
    118a:	fd 4f       	sbci	r31, 0xFD	; 253
    118c:	80 83       	st	Z, r24
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
}

void twi_setAck()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA)| (1<<TWIE);
    118e:	85 ec       	ldi	r24, 0xC5	; 197
    1190:	86 bf       	out	0x36, r24	; 54
			{
				TWIbejovo[TWIbejovoHanyadik] = TWDR;
				twi_setAck();
			}
			
			++TWIbejovoHanyadik;
    1192:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <TWIbejovoHanyadik>
    1196:	8f 5f       	subi	r24, 0xFF	; 255
    1198:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <TWIbejovoHanyadik>
			
			if(TWIbejovoHanyadik >= TWIbejovoHossz)
    119c:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <TWIbejovoHanyadik>
    11a0:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <TWIbejovoHossz>
    11a4:	98 17       	cp	r25, r24
    11a6:	28 f0       	brcs	.+10     	; 0x11b2 <__vector_17+0x15a>
			{
				TWIujbejovo = 1;
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	80 93 7d 02 	sts	0x027D, r24	; 0x80027d <TWIujbejovo>
//TWCR = (1 << TWINT)| (1 << TWEN) | (1 << TWSTA) | (1<<TWIE);
//}
void twi_master_stop()
{
	// Set stop bit
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO)| (1<<TWIE);
    11ae:	85 e9       	ldi	r24, 0x95	; 149
    11b0:	86 bf       	out	0x36, r24	; 54
	//twi_setAck();
	//break;
	//}
	//}

	TWCR |= 0x80;// Clear interrupt flag bit
    11b2:	86 b7       	in	r24, 0x36	; 54
    11b4:	80 68       	ori	r24, 0x80	; 128
    11b6:	86 bf       	out	0x36, r24	; 54
}
    11b8:	ff 91       	pop	r31
    11ba:	ef 91       	pop	r30
    11bc:	bf 91       	pop	r27
    11be:	af 91       	pop	r26
    11c0:	9f 91       	pop	r25
    11c2:	8f 91       	pop	r24
    11c4:	0f 90       	pop	r0
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	0f 90       	pop	r0
    11ca:	1f 90       	pop	r1
    11cc:	18 95       	reti

000011ce <__cmpsf2>:
    11ce:	d4 d0       	rcall	.+424    	; 0x1378 <__fp_cmp>
    11d0:	08 f4       	brcc	.+2      	; 0x11d4 <__cmpsf2+0x6>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	08 95       	ret

000011d6 <__divsf3>:
    11d6:	0c d0       	rcall	.+24     	; 0x11f0 <__divsf3x>
    11d8:	0a c1       	rjmp	.+532    	; 0x13ee <__fp_round>
    11da:	02 d1       	rcall	.+516    	; 0x13e0 <__fp_pscB>
    11dc:	40 f0       	brcs	.+16     	; 0x11ee <__divsf3+0x18>
    11de:	f9 d0       	rcall	.+498    	; 0x13d2 <__fp_pscA>
    11e0:	30 f0       	brcs	.+12     	; 0x11ee <__divsf3+0x18>
    11e2:	21 f4       	brne	.+8      	; 0x11ec <__divsf3+0x16>
    11e4:	5f 3f       	cpi	r21, 0xFF	; 255
    11e6:	19 f0       	breq	.+6      	; 0x11ee <__divsf3+0x18>
    11e8:	eb c0       	rjmp	.+470    	; 0x13c0 <__fp_inf>
    11ea:	51 11       	cpse	r21, r1
    11ec:	34 c1       	rjmp	.+616    	; 0x1456 <__fp_szero>
    11ee:	ee c0       	rjmp	.+476    	; 0x13cc <__fp_nan>

000011f0 <__divsf3x>:
    11f0:	0f d1       	rcall	.+542    	; 0x1410 <__fp_split3>
    11f2:	98 f3       	brcs	.-26     	; 0x11da <__divsf3+0x4>

000011f4 <__divsf3_pse>:
    11f4:	99 23       	and	r25, r25
    11f6:	c9 f3       	breq	.-14     	; 0x11ea <__divsf3+0x14>
    11f8:	55 23       	and	r21, r21
    11fa:	b1 f3       	breq	.-20     	; 0x11e8 <__divsf3+0x12>
    11fc:	95 1b       	sub	r25, r21
    11fe:	55 0b       	sbc	r21, r21
    1200:	bb 27       	eor	r27, r27
    1202:	aa 27       	eor	r26, r26
    1204:	62 17       	cp	r22, r18
    1206:	73 07       	cpc	r23, r19
    1208:	84 07       	cpc	r24, r20
    120a:	38 f0       	brcs	.+14     	; 0x121a <__divsf3_pse+0x26>
    120c:	9f 5f       	subi	r25, 0xFF	; 255
    120e:	5f 4f       	sbci	r21, 0xFF	; 255
    1210:	22 0f       	add	r18, r18
    1212:	33 1f       	adc	r19, r19
    1214:	44 1f       	adc	r20, r20
    1216:	aa 1f       	adc	r26, r26
    1218:	a9 f3       	breq	.-22     	; 0x1204 <__divsf3_pse+0x10>
    121a:	33 d0       	rcall	.+102    	; 0x1282 <__divsf3_pse+0x8e>
    121c:	0e 2e       	mov	r0, r30
    121e:	3a f0       	brmi	.+14     	; 0x122e <__divsf3_pse+0x3a>
    1220:	e0 e8       	ldi	r30, 0x80	; 128
    1222:	30 d0       	rcall	.+96     	; 0x1284 <__divsf3_pse+0x90>
    1224:	91 50       	subi	r25, 0x01	; 1
    1226:	50 40       	sbci	r21, 0x00	; 0
    1228:	e6 95       	lsr	r30
    122a:	00 1c       	adc	r0, r0
    122c:	ca f7       	brpl	.-14     	; 0x1220 <__divsf3_pse+0x2c>
    122e:	29 d0       	rcall	.+82     	; 0x1282 <__divsf3_pse+0x8e>
    1230:	fe 2f       	mov	r31, r30
    1232:	27 d0       	rcall	.+78     	; 0x1282 <__divsf3_pse+0x8e>
    1234:	66 0f       	add	r22, r22
    1236:	77 1f       	adc	r23, r23
    1238:	88 1f       	adc	r24, r24
    123a:	bb 1f       	adc	r27, r27
    123c:	26 17       	cp	r18, r22
    123e:	37 07       	cpc	r19, r23
    1240:	48 07       	cpc	r20, r24
    1242:	ab 07       	cpc	r26, r27
    1244:	b0 e8       	ldi	r27, 0x80	; 128
    1246:	09 f0       	breq	.+2      	; 0x124a <__divsf3_pse+0x56>
    1248:	bb 0b       	sbc	r27, r27
    124a:	80 2d       	mov	r24, r0
    124c:	bf 01       	movw	r22, r30
    124e:	ff 27       	eor	r31, r31
    1250:	93 58       	subi	r25, 0x83	; 131
    1252:	5f 4f       	sbci	r21, 0xFF	; 255
    1254:	2a f0       	brmi	.+10     	; 0x1260 <__divsf3_pse+0x6c>
    1256:	9e 3f       	cpi	r25, 0xFE	; 254
    1258:	51 05       	cpc	r21, r1
    125a:	68 f0       	brcs	.+26     	; 0x1276 <__divsf3_pse+0x82>
    125c:	b1 c0       	rjmp	.+354    	; 0x13c0 <__fp_inf>
    125e:	fb c0       	rjmp	.+502    	; 0x1456 <__fp_szero>
    1260:	5f 3f       	cpi	r21, 0xFF	; 255
    1262:	ec f3       	brlt	.-6      	; 0x125e <__divsf3_pse+0x6a>
    1264:	98 3e       	cpi	r25, 0xE8	; 232
    1266:	dc f3       	brlt	.-10     	; 0x125e <__divsf3_pse+0x6a>
    1268:	86 95       	lsr	r24
    126a:	77 95       	ror	r23
    126c:	67 95       	ror	r22
    126e:	b7 95       	ror	r27
    1270:	f7 95       	ror	r31
    1272:	9f 5f       	subi	r25, 0xFF	; 255
    1274:	c9 f7       	brne	.-14     	; 0x1268 <__divsf3_pse+0x74>
    1276:	88 0f       	add	r24, r24
    1278:	91 1d       	adc	r25, r1
    127a:	96 95       	lsr	r25
    127c:	87 95       	ror	r24
    127e:	97 f9       	bld	r25, 7
    1280:	08 95       	ret
    1282:	e1 e0       	ldi	r30, 0x01	; 1
    1284:	66 0f       	add	r22, r22
    1286:	77 1f       	adc	r23, r23
    1288:	88 1f       	adc	r24, r24
    128a:	bb 1f       	adc	r27, r27
    128c:	62 17       	cp	r22, r18
    128e:	73 07       	cpc	r23, r19
    1290:	84 07       	cpc	r24, r20
    1292:	ba 07       	cpc	r27, r26
    1294:	20 f0       	brcs	.+8      	; 0x129e <__divsf3_pse+0xaa>
    1296:	62 1b       	sub	r22, r18
    1298:	73 0b       	sbc	r23, r19
    129a:	84 0b       	sbc	r24, r20
    129c:	ba 0b       	sbc	r27, r26
    129e:	ee 1f       	adc	r30, r30
    12a0:	88 f7       	brcc	.-30     	; 0x1284 <__divsf3_pse+0x90>
    12a2:	e0 95       	com	r30
    12a4:	08 95       	ret

000012a6 <__fixunssfsi>:
    12a6:	bc d0       	rcall	.+376    	; 0x1420 <__fp_splitA>
    12a8:	88 f0       	brcs	.+34     	; 0x12cc <__fixunssfsi+0x26>
    12aa:	9f 57       	subi	r25, 0x7F	; 127
    12ac:	90 f0       	brcs	.+36     	; 0x12d2 <__fixunssfsi+0x2c>
    12ae:	b9 2f       	mov	r27, r25
    12b0:	99 27       	eor	r25, r25
    12b2:	b7 51       	subi	r27, 0x17	; 23
    12b4:	a0 f0       	brcs	.+40     	; 0x12de <__fixunssfsi+0x38>
    12b6:	d1 f0       	breq	.+52     	; 0x12ec <__fixunssfsi+0x46>
    12b8:	66 0f       	add	r22, r22
    12ba:	77 1f       	adc	r23, r23
    12bc:	88 1f       	adc	r24, r24
    12be:	99 1f       	adc	r25, r25
    12c0:	1a f0       	brmi	.+6      	; 0x12c8 <__fixunssfsi+0x22>
    12c2:	ba 95       	dec	r27
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <__fixunssfsi+0x12>
    12c6:	12 c0       	rjmp	.+36     	; 0x12ec <__fixunssfsi+0x46>
    12c8:	b1 30       	cpi	r27, 0x01	; 1
    12ca:	81 f0       	breq	.+32     	; 0x12ec <__fixunssfsi+0x46>
    12cc:	c3 d0       	rcall	.+390    	; 0x1454 <__fp_zero>
    12ce:	b1 e0       	ldi	r27, 0x01	; 1
    12d0:	08 95       	ret
    12d2:	c0 c0       	rjmp	.+384    	; 0x1454 <__fp_zero>
    12d4:	67 2f       	mov	r22, r23
    12d6:	78 2f       	mov	r23, r24
    12d8:	88 27       	eor	r24, r24
    12da:	b8 5f       	subi	r27, 0xF8	; 248
    12dc:	39 f0       	breq	.+14     	; 0x12ec <__fixunssfsi+0x46>
    12de:	b9 3f       	cpi	r27, 0xF9	; 249
    12e0:	cc f3       	brlt	.-14     	; 0x12d4 <__fixunssfsi+0x2e>
    12e2:	86 95       	lsr	r24
    12e4:	77 95       	ror	r23
    12e6:	67 95       	ror	r22
    12e8:	b3 95       	inc	r27
    12ea:	d9 f7       	brne	.-10     	; 0x12e2 <__fixunssfsi+0x3c>
    12ec:	3e f4       	brtc	.+14     	; 0x12fc <__fixunssfsi+0x56>
    12ee:	90 95       	com	r25
    12f0:	80 95       	com	r24
    12f2:	70 95       	com	r23
    12f4:	61 95       	neg	r22
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	08 95       	ret

000012fe <__floatunsisf>:
    12fe:	e8 94       	clt
    1300:	09 c0       	rjmp	.+18     	; 0x1314 <__floatsisf+0x12>

00001302 <__floatsisf>:
    1302:	97 fb       	bst	r25, 7
    1304:	3e f4       	brtc	.+14     	; 0x1314 <__floatsisf+0x12>
    1306:	90 95       	com	r25
    1308:	80 95       	com	r24
    130a:	70 95       	com	r23
    130c:	61 95       	neg	r22
    130e:	7f 4f       	sbci	r23, 0xFF	; 255
    1310:	8f 4f       	sbci	r24, 0xFF	; 255
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	99 23       	and	r25, r25
    1316:	a9 f0       	breq	.+42     	; 0x1342 <__floatsisf+0x40>
    1318:	f9 2f       	mov	r31, r25
    131a:	96 e9       	ldi	r25, 0x96	; 150
    131c:	bb 27       	eor	r27, r27
    131e:	93 95       	inc	r25
    1320:	f6 95       	lsr	r31
    1322:	87 95       	ror	r24
    1324:	77 95       	ror	r23
    1326:	67 95       	ror	r22
    1328:	b7 95       	ror	r27
    132a:	f1 11       	cpse	r31, r1
    132c:	f8 cf       	rjmp	.-16     	; 0x131e <__floatsisf+0x1c>
    132e:	fa f4       	brpl	.+62     	; 0x136e <__floatsisf+0x6c>
    1330:	bb 0f       	add	r27, r27
    1332:	11 f4       	brne	.+4      	; 0x1338 <__floatsisf+0x36>
    1334:	60 ff       	sbrs	r22, 0
    1336:	1b c0       	rjmp	.+54     	; 0x136e <__floatsisf+0x6c>
    1338:	6f 5f       	subi	r22, 0xFF	; 255
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	8f 4f       	sbci	r24, 0xFF	; 255
    133e:	9f 4f       	sbci	r25, 0xFF	; 255
    1340:	16 c0       	rjmp	.+44     	; 0x136e <__floatsisf+0x6c>
    1342:	88 23       	and	r24, r24
    1344:	11 f0       	breq	.+4      	; 0x134a <__floatsisf+0x48>
    1346:	96 e9       	ldi	r25, 0x96	; 150
    1348:	11 c0       	rjmp	.+34     	; 0x136c <__floatsisf+0x6a>
    134a:	77 23       	and	r23, r23
    134c:	21 f0       	breq	.+8      	; 0x1356 <__floatsisf+0x54>
    134e:	9e e8       	ldi	r25, 0x8E	; 142
    1350:	87 2f       	mov	r24, r23
    1352:	76 2f       	mov	r23, r22
    1354:	05 c0       	rjmp	.+10     	; 0x1360 <__floatsisf+0x5e>
    1356:	66 23       	and	r22, r22
    1358:	71 f0       	breq	.+28     	; 0x1376 <__floatsisf+0x74>
    135a:	96 e8       	ldi	r25, 0x86	; 134
    135c:	86 2f       	mov	r24, r22
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	60 e0       	ldi	r22, 0x00	; 0
    1362:	2a f0       	brmi	.+10     	; 0x136e <__floatsisf+0x6c>
    1364:	9a 95       	dec	r25
    1366:	66 0f       	add	r22, r22
    1368:	77 1f       	adc	r23, r23
    136a:	88 1f       	adc	r24, r24
    136c:	da f7       	brpl	.-10     	; 0x1364 <__floatsisf+0x62>
    136e:	88 0f       	add	r24, r24
    1370:	96 95       	lsr	r25
    1372:	87 95       	ror	r24
    1374:	97 f9       	bld	r25, 7
    1376:	08 95       	ret

00001378 <__fp_cmp>:
    1378:	99 0f       	add	r25, r25
    137a:	00 08       	sbc	r0, r0
    137c:	55 0f       	add	r21, r21
    137e:	aa 0b       	sbc	r26, r26
    1380:	e0 e8       	ldi	r30, 0x80	; 128
    1382:	fe ef       	ldi	r31, 0xFE	; 254
    1384:	16 16       	cp	r1, r22
    1386:	17 06       	cpc	r1, r23
    1388:	e8 07       	cpc	r30, r24
    138a:	f9 07       	cpc	r31, r25
    138c:	c0 f0       	brcs	.+48     	; 0x13be <__fp_cmp+0x46>
    138e:	12 16       	cp	r1, r18
    1390:	13 06       	cpc	r1, r19
    1392:	e4 07       	cpc	r30, r20
    1394:	f5 07       	cpc	r31, r21
    1396:	98 f0       	brcs	.+38     	; 0x13be <__fp_cmp+0x46>
    1398:	62 1b       	sub	r22, r18
    139a:	73 0b       	sbc	r23, r19
    139c:	84 0b       	sbc	r24, r20
    139e:	95 0b       	sbc	r25, r21
    13a0:	39 f4       	brne	.+14     	; 0x13b0 <__fp_cmp+0x38>
    13a2:	0a 26       	eor	r0, r26
    13a4:	61 f0       	breq	.+24     	; 0x13be <__fp_cmp+0x46>
    13a6:	23 2b       	or	r18, r19
    13a8:	24 2b       	or	r18, r20
    13aa:	25 2b       	or	r18, r21
    13ac:	21 f4       	brne	.+8      	; 0x13b6 <__fp_cmp+0x3e>
    13ae:	08 95       	ret
    13b0:	0a 26       	eor	r0, r26
    13b2:	09 f4       	brne	.+2      	; 0x13b6 <__fp_cmp+0x3e>
    13b4:	a1 40       	sbci	r26, 0x01	; 1
    13b6:	a6 95       	lsr	r26
    13b8:	8f ef       	ldi	r24, 0xFF	; 255
    13ba:	81 1d       	adc	r24, r1
    13bc:	81 1d       	adc	r24, r1
    13be:	08 95       	ret

000013c0 <__fp_inf>:
    13c0:	97 f9       	bld	r25, 7
    13c2:	9f 67       	ori	r25, 0x7F	; 127
    13c4:	80 e8       	ldi	r24, 0x80	; 128
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	08 95       	ret

000013cc <__fp_nan>:
    13cc:	9f ef       	ldi	r25, 0xFF	; 255
    13ce:	80 ec       	ldi	r24, 0xC0	; 192
    13d0:	08 95       	ret

000013d2 <__fp_pscA>:
    13d2:	00 24       	eor	r0, r0
    13d4:	0a 94       	dec	r0
    13d6:	16 16       	cp	r1, r22
    13d8:	17 06       	cpc	r1, r23
    13da:	18 06       	cpc	r1, r24
    13dc:	09 06       	cpc	r0, r25
    13de:	08 95       	ret

000013e0 <__fp_pscB>:
    13e0:	00 24       	eor	r0, r0
    13e2:	0a 94       	dec	r0
    13e4:	12 16       	cp	r1, r18
    13e6:	13 06       	cpc	r1, r19
    13e8:	14 06       	cpc	r1, r20
    13ea:	05 06       	cpc	r0, r21
    13ec:	08 95       	ret

000013ee <__fp_round>:
    13ee:	09 2e       	mov	r0, r25
    13f0:	03 94       	inc	r0
    13f2:	00 0c       	add	r0, r0
    13f4:	11 f4       	brne	.+4      	; 0x13fa <__fp_round+0xc>
    13f6:	88 23       	and	r24, r24
    13f8:	52 f0       	brmi	.+20     	; 0x140e <__fp_round+0x20>
    13fa:	bb 0f       	add	r27, r27
    13fc:	40 f4       	brcc	.+16     	; 0x140e <__fp_round+0x20>
    13fe:	bf 2b       	or	r27, r31
    1400:	11 f4       	brne	.+4      	; 0x1406 <__fp_round+0x18>
    1402:	60 ff       	sbrs	r22, 0
    1404:	04 c0       	rjmp	.+8      	; 0x140e <__fp_round+0x20>
    1406:	6f 5f       	subi	r22, 0xFF	; 255
    1408:	7f 4f       	sbci	r23, 0xFF	; 255
    140a:	8f 4f       	sbci	r24, 0xFF	; 255
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	08 95       	ret

00001410 <__fp_split3>:
    1410:	57 fd       	sbrc	r21, 7
    1412:	90 58       	subi	r25, 0x80	; 128
    1414:	44 0f       	add	r20, r20
    1416:	55 1f       	adc	r21, r21
    1418:	59 f0       	breq	.+22     	; 0x1430 <__fp_splitA+0x10>
    141a:	5f 3f       	cpi	r21, 0xFF	; 255
    141c:	71 f0       	breq	.+28     	; 0x143a <__fp_splitA+0x1a>
    141e:	47 95       	ror	r20

00001420 <__fp_splitA>:
    1420:	88 0f       	add	r24, r24
    1422:	97 fb       	bst	r25, 7
    1424:	99 1f       	adc	r25, r25
    1426:	61 f0       	breq	.+24     	; 0x1440 <__fp_splitA+0x20>
    1428:	9f 3f       	cpi	r25, 0xFF	; 255
    142a:	79 f0       	breq	.+30     	; 0x144a <__fp_splitA+0x2a>
    142c:	87 95       	ror	r24
    142e:	08 95       	ret
    1430:	12 16       	cp	r1, r18
    1432:	13 06       	cpc	r1, r19
    1434:	14 06       	cpc	r1, r20
    1436:	55 1f       	adc	r21, r21
    1438:	f2 cf       	rjmp	.-28     	; 0x141e <__fp_split3+0xe>
    143a:	46 95       	lsr	r20
    143c:	f1 df       	rcall	.-30     	; 0x1420 <__fp_splitA>
    143e:	08 c0       	rjmp	.+16     	; 0x1450 <__fp_splitA+0x30>
    1440:	16 16       	cp	r1, r22
    1442:	17 06       	cpc	r1, r23
    1444:	18 06       	cpc	r1, r24
    1446:	99 1f       	adc	r25, r25
    1448:	f1 cf       	rjmp	.-30     	; 0x142c <__fp_splitA+0xc>
    144a:	86 95       	lsr	r24
    144c:	71 05       	cpc	r23, r1
    144e:	61 05       	cpc	r22, r1
    1450:	08 94       	sec
    1452:	08 95       	ret

00001454 <__fp_zero>:
    1454:	e8 94       	clt

00001456 <__fp_szero>:
    1456:	bb 27       	eor	r27, r27
    1458:	66 27       	eor	r22, r22
    145a:	77 27       	eor	r23, r23
    145c:	cb 01       	movw	r24, r22
    145e:	97 f9       	bld	r25, 7
    1460:	08 95       	ret

00001462 <__gesf2>:
    1462:	8a df       	rcall	.-236    	; 0x1378 <__fp_cmp>
    1464:	08 f4       	brcc	.+2      	; 0x1468 <__gesf2+0x6>
    1466:	8f ef       	ldi	r24, 0xFF	; 255
    1468:	08 95       	ret

0000146a <__mulsf3>:
    146a:	0b d0       	rcall	.+22     	; 0x1482 <__mulsf3x>
    146c:	c0 cf       	rjmp	.-128    	; 0x13ee <__fp_round>
    146e:	b1 df       	rcall	.-158    	; 0x13d2 <__fp_pscA>
    1470:	28 f0       	brcs	.+10     	; 0x147c <__mulsf3+0x12>
    1472:	b6 df       	rcall	.-148    	; 0x13e0 <__fp_pscB>
    1474:	18 f0       	brcs	.+6      	; 0x147c <__mulsf3+0x12>
    1476:	95 23       	and	r25, r21
    1478:	09 f0       	breq	.+2      	; 0x147c <__mulsf3+0x12>
    147a:	a2 cf       	rjmp	.-188    	; 0x13c0 <__fp_inf>
    147c:	a7 cf       	rjmp	.-178    	; 0x13cc <__fp_nan>
    147e:	11 24       	eor	r1, r1
    1480:	ea cf       	rjmp	.-44     	; 0x1456 <__fp_szero>

00001482 <__mulsf3x>:
    1482:	c6 df       	rcall	.-116    	; 0x1410 <__fp_split3>
    1484:	a0 f3       	brcs	.-24     	; 0x146e <__mulsf3+0x4>

00001486 <__mulsf3_pse>:
    1486:	95 9f       	mul	r25, r21
    1488:	d1 f3       	breq	.-12     	; 0x147e <__mulsf3+0x14>
    148a:	95 0f       	add	r25, r21
    148c:	50 e0       	ldi	r21, 0x00	; 0
    148e:	55 1f       	adc	r21, r21
    1490:	62 9f       	mul	r22, r18
    1492:	f0 01       	movw	r30, r0
    1494:	72 9f       	mul	r23, r18
    1496:	bb 27       	eor	r27, r27
    1498:	f0 0d       	add	r31, r0
    149a:	b1 1d       	adc	r27, r1
    149c:	63 9f       	mul	r22, r19
    149e:	aa 27       	eor	r26, r26
    14a0:	f0 0d       	add	r31, r0
    14a2:	b1 1d       	adc	r27, r1
    14a4:	aa 1f       	adc	r26, r26
    14a6:	64 9f       	mul	r22, r20
    14a8:	66 27       	eor	r22, r22
    14aa:	b0 0d       	add	r27, r0
    14ac:	a1 1d       	adc	r26, r1
    14ae:	66 1f       	adc	r22, r22
    14b0:	82 9f       	mul	r24, r18
    14b2:	22 27       	eor	r18, r18
    14b4:	b0 0d       	add	r27, r0
    14b6:	a1 1d       	adc	r26, r1
    14b8:	62 1f       	adc	r22, r18
    14ba:	73 9f       	mul	r23, r19
    14bc:	b0 0d       	add	r27, r0
    14be:	a1 1d       	adc	r26, r1
    14c0:	62 1f       	adc	r22, r18
    14c2:	83 9f       	mul	r24, r19
    14c4:	a0 0d       	add	r26, r0
    14c6:	61 1d       	adc	r22, r1
    14c8:	22 1f       	adc	r18, r18
    14ca:	74 9f       	mul	r23, r20
    14cc:	33 27       	eor	r19, r19
    14ce:	a0 0d       	add	r26, r0
    14d0:	61 1d       	adc	r22, r1
    14d2:	23 1f       	adc	r18, r19
    14d4:	84 9f       	mul	r24, r20
    14d6:	60 0d       	add	r22, r0
    14d8:	21 1d       	adc	r18, r1
    14da:	82 2f       	mov	r24, r18
    14dc:	76 2f       	mov	r23, r22
    14de:	6a 2f       	mov	r22, r26
    14e0:	11 24       	eor	r1, r1
    14e2:	9f 57       	subi	r25, 0x7F	; 127
    14e4:	50 40       	sbci	r21, 0x00	; 0
    14e6:	8a f0       	brmi	.+34     	; 0x150a <__mulsf3_pse+0x84>
    14e8:	e1 f0       	breq	.+56     	; 0x1522 <__mulsf3_pse+0x9c>
    14ea:	88 23       	and	r24, r24
    14ec:	4a f0       	brmi	.+18     	; 0x1500 <__mulsf3_pse+0x7a>
    14ee:	ee 0f       	add	r30, r30
    14f0:	ff 1f       	adc	r31, r31
    14f2:	bb 1f       	adc	r27, r27
    14f4:	66 1f       	adc	r22, r22
    14f6:	77 1f       	adc	r23, r23
    14f8:	88 1f       	adc	r24, r24
    14fa:	91 50       	subi	r25, 0x01	; 1
    14fc:	50 40       	sbci	r21, 0x00	; 0
    14fe:	a9 f7       	brne	.-22     	; 0x14ea <__mulsf3_pse+0x64>
    1500:	9e 3f       	cpi	r25, 0xFE	; 254
    1502:	51 05       	cpc	r21, r1
    1504:	70 f0       	brcs	.+28     	; 0x1522 <__mulsf3_pse+0x9c>
    1506:	5c cf       	rjmp	.-328    	; 0x13c0 <__fp_inf>
    1508:	a6 cf       	rjmp	.-180    	; 0x1456 <__fp_szero>
    150a:	5f 3f       	cpi	r21, 0xFF	; 255
    150c:	ec f3       	brlt	.-6      	; 0x1508 <__mulsf3_pse+0x82>
    150e:	98 3e       	cpi	r25, 0xE8	; 232
    1510:	dc f3       	brlt	.-10     	; 0x1508 <__mulsf3_pse+0x82>
    1512:	86 95       	lsr	r24
    1514:	77 95       	ror	r23
    1516:	67 95       	ror	r22
    1518:	b7 95       	ror	r27
    151a:	f7 95       	ror	r31
    151c:	e7 95       	ror	r30
    151e:	9f 5f       	subi	r25, 0xFF	; 255
    1520:	c1 f7       	brne	.-16     	; 0x1512 <__mulsf3_pse+0x8c>
    1522:	fe 2b       	or	r31, r30
    1524:	88 0f       	add	r24, r24
    1526:	91 1d       	adc	r25, r1
    1528:	96 95       	lsr	r25
    152a:	87 95       	ror	r24
    152c:	97 f9       	bld	r25, 7
    152e:	08 95       	ret

00001530 <round>:
    1530:	77 df       	rcall	.-274    	; 0x1420 <__fp_splitA>
    1532:	e0 f0       	brcs	.+56     	; 0x156c <round+0x3c>
    1534:	9e 37       	cpi	r25, 0x7E	; 126
    1536:	d8 f0       	brcs	.+54     	; 0x156e <round+0x3e>
    1538:	96 39       	cpi	r25, 0x96	; 150
    153a:	b8 f4       	brcc	.+46     	; 0x156a <round+0x3a>
    153c:	9e 38       	cpi	r25, 0x8E	; 142
    153e:	48 f4       	brcc	.+18     	; 0x1552 <round+0x22>
    1540:	67 2f       	mov	r22, r23
    1542:	78 2f       	mov	r23, r24
    1544:	88 27       	eor	r24, r24
    1546:	98 5f       	subi	r25, 0xF8	; 248
    1548:	f9 cf       	rjmp	.-14     	; 0x153c <round+0xc>
    154a:	86 95       	lsr	r24
    154c:	77 95       	ror	r23
    154e:	67 95       	ror	r22
    1550:	93 95       	inc	r25
    1552:	95 39       	cpi	r25, 0x95	; 149
    1554:	d0 f3       	brcs	.-12     	; 0x154a <round+0x1a>
    1556:	b6 2f       	mov	r27, r22
    1558:	b1 70       	andi	r27, 0x01	; 1
    155a:	6b 0f       	add	r22, r27
    155c:	71 1d       	adc	r23, r1
    155e:	81 1d       	adc	r24, r1
    1560:	20 f4       	brcc	.+8      	; 0x156a <round+0x3a>
    1562:	87 95       	ror	r24
    1564:	77 95       	ror	r23
    1566:	67 95       	ror	r22
    1568:	93 95       	inc	r25
    156a:	02 c0       	rjmp	.+4      	; 0x1570 <__fp_mintl>
    156c:	1c c0       	rjmp	.+56     	; 0x15a6 <__fp_mpack>
    156e:	73 cf       	rjmp	.-282    	; 0x1456 <__fp_szero>

00001570 <__fp_mintl>:
    1570:	88 23       	and	r24, r24
    1572:	71 f4       	brne	.+28     	; 0x1590 <__fp_mintl+0x20>
    1574:	77 23       	and	r23, r23
    1576:	21 f0       	breq	.+8      	; 0x1580 <__fp_mintl+0x10>
    1578:	98 50       	subi	r25, 0x08	; 8
    157a:	87 2b       	or	r24, r23
    157c:	76 2f       	mov	r23, r22
    157e:	07 c0       	rjmp	.+14     	; 0x158e <__fp_mintl+0x1e>
    1580:	66 23       	and	r22, r22
    1582:	11 f4       	brne	.+4      	; 0x1588 <__fp_mintl+0x18>
    1584:	99 27       	eor	r25, r25
    1586:	0d c0       	rjmp	.+26     	; 0x15a2 <__fp_mintl+0x32>
    1588:	90 51       	subi	r25, 0x10	; 16
    158a:	86 2b       	or	r24, r22
    158c:	70 e0       	ldi	r23, 0x00	; 0
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	2a f0       	brmi	.+10     	; 0x159c <__fp_mintl+0x2c>
    1592:	9a 95       	dec	r25
    1594:	66 0f       	add	r22, r22
    1596:	77 1f       	adc	r23, r23
    1598:	88 1f       	adc	r24, r24
    159a:	da f7       	brpl	.-10     	; 0x1592 <__fp_mintl+0x22>
    159c:	88 0f       	add	r24, r24
    159e:	96 95       	lsr	r25
    15a0:	87 95       	ror	r24
    15a2:	97 f9       	bld	r25, 7
    15a4:	08 95       	ret

000015a6 <__fp_mpack>:
    15a6:	9f 3f       	cpi	r25, 0xFF	; 255
    15a8:	31 f0       	breq	.+12     	; 0x15b6 <__fp_mpack_finite+0xc>

000015aa <__fp_mpack_finite>:
    15aa:	91 50       	subi	r25, 0x01	; 1
    15ac:	20 f4       	brcc	.+8      	; 0x15b6 <__fp_mpack_finite+0xc>
    15ae:	87 95       	ror	r24
    15b0:	77 95       	ror	r23
    15b2:	67 95       	ror	r22
    15b4:	b7 95       	ror	r27
    15b6:	88 0f       	add	r24, r24
    15b8:	91 1d       	adc	r25, r1
    15ba:	96 95       	lsr	r25
    15bc:	87 95       	ror	r24
    15be:	97 f9       	bld	r25, 7
    15c0:	08 95       	ret

000015c2 <_exit>:
    15c2:	f8 94       	cli

000015c4 <__stop_program>:
    15c4:	ff cf       	rjmp	.-2      	; 0x15c4 <__stop_program>
